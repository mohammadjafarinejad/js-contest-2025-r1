{"version":3,"file":"7751.e804d3f7bbdf481e5b29.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.module.scss?b340","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/contest/animated-chat/helpers/schedulers.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/cancellablePromise.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/animation.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/color.ts","webpack://telegram-t/./src/contest/animated-chat/gradientRender.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/easing/easeOutQuad.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/object/deepEqual.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/environment/ctx.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/environment/userAgent.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/fixChromiumMp4.constants.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/dom/renderImageFromUrl.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/onMediaLoad.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/environment/imageBitmapSupport.ts","webpack://telegram-t/./src/contest/animated-chat/patternRender.ts","webpack://telegram-t/./src/contest/animated-chat/helpers/array/indexOfAndSplice.ts","webpack://telegram-t/./src/contest/animated-chat/AnimatedChatBackground.tsx","webpack://telegram-t/./src/contest/chat-folders/FolderIcons.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/contest/text-editor/RichTextEditor.tsx","webpack://telegram-t/./src/contest/text-editor/NewMessageInput.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./node_modules/events/events.js","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport { MessageInputRefType, useMessageInputEvent } from '../../../../contest/text-editor';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  // getHtml: Signal<string>,\n  textEditorRef: MessageInputRefType,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n  const {isMessageInputChanged} = useMessageInputEvent(textEditorRef);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    if (!textEditorRef.current) return;\n    // const html = getHtml();\n    const html = textEditorRef.current.getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [isMessageInputChanged, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, isMessageInputChanged], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, isMessageInputChanged]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport { Contest } from '../../../../contest/contest';\nconst logger = Contest.createLogger(\"useClipboardPaste.ts\");\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n      logger.log(\"handlePaste() pastedText:\", pastedText, \"html:\", html);\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\n// import parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\nimport { MessageInputRefType, useMessageInputEvent } from '../../../../contest/text-editor';\nimport { areFormattedTextsEqual } from '../../../../contest/text-editor/utils';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  // getHtml,\n  // setHtml,\n  messageInputRef: textEditorRef,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  // getHtml: Signal<string>;\n  // setHtml: (html: string) => void;\n  messageInputRef: MessageInputRefType;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n  const {isMessageInputChanged} = useMessageInputEvent(textEditorRef);\n\n  useEffect(() => {\n    if (!textEditorRef.current) return;\n    // const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    // if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n    if (areFormattedTextsEqual(draft?.text, textEditorRef.current.getFormattedText()) && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, isMessageInputChanged]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (!textEditorRef.current) return;\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    // const html = getHtml();\n    // const html = textEditorRef.current.getHtml();\n\n    if (textEditorRef.current.isTouched()) {\n      // ? running inside requestMeasure() currently cause:\n      // ? TypeError: Cannot read properties of undefined teact-dom.ts\n      // requestMeasure(() => {\n      //   if (!textEditorRef.current) return;\n      //   saveDraft({\n      //     chatId: prevState.chatId ?? chatId,\n      //     threadId: prevState.threadId ?? threadId,\n      //     // text: parseHtmlAsFormattedText(html),\n      //     text: textEditorRef.current.getFormattedText()\n      //   });\n      // });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (!textEditorRef.current) return;\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        // setHtml('');\n        textEditorRef.current.resetEditor();\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    // setHtml(getTextWithEntitiesAsHtml(draft.text));\n    if (areFormattedTextsEqual(draft.text, textEditorRef.current.getFormattedText())) return;\n    textEditorRef.current.setup(draft.text, { source: \"useDraft()\" });\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, isMessageInputChanged, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (!textEditorRef.current) return;\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (textEditorRef.current.isHtmlEmpty()) {\n      updateDraft();\n      return;\n    }\n\n    // if (!getHtml()) {\n    //   updateDraft();\n\n    //   return;\n    // }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, isMessageInputChanged, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\nimport { MessageInputRefType, useMessageInputEvent } from '../../../../contest/text-editor';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  textEditorRef: MessageInputRefType,\n  // getHtml: Signal<string>,\n  // setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n  const {isMessageInputChanged} = useMessageInputEvent(textEditorRef);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n    if (!textEditorRef.current) return;\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      // setHtml('');\n      textEditorRef.current.resetEditor();\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    // const html = getTextWithEntitiesAsHtml(text);\n\n    // setHtml(html);\n    textEditorRef.current.setup(text, { source: \"useEditting()\" });\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      if (!textEditorRef.current) return;\n      const edited = textEditorRef.current.getFormattedText();\n      // const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, isMessageInputChanged, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    if (!textEditorRef.current) return false;\n    const edited = textEditorRef.current.getFormattedText();\n    // const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, isMessageInputChanged], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, isMessageInputChanged], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, isMessageInputChanged, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      // setHtml(getTextWithEntitiesAsHtml(draft.text));\n      textEditorRef.current?.setup(draft.text, { source: \"useEditting()\" });\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    // const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!textEditorRef.current) return;\n    const { text, entities } = textEditorRef.current.getFormattedText();\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    if (!textEditorRef.current) return;\n    const edited = textEditorRef.current.getFormattedText();\n    // const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\nimport { MessageInputRefType, useMessageInputEvent } from '../../../../contest/text-editor';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  // getHtml: Signal<string>,\n  textEditorRef: MessageInputRefType,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n  const {isMessageInputChanged} = useMessageInputEvent(textEditorRef);\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    if (!textEditorRef.current) return MEMO_NO_RESULT;\n    // const html = getHtml();\n    const html = textEditorRef.current.getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [isMessageInputChanged, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, isMessageInputChanged], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, isMessageInputChanged]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport { MessageInputRefType, useMessageInputEvent } from '../../../../contest/text-editor';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  // getHtml: Signal<string>,\n  textEditorRef: MessageInputRefType,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n  const {isMessageInputChanged} = useMessageInputEvent(textEditorRef);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    if (!textEditorRef.current) return;\n    // const html = getHtml();\n    const html = textEditorRef.current.getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [isMessageInputChanged, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, isMessageInputChanged]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\nimport { MessageInputRefType, useMessageInputEvent } from '../../../contest/text-editor';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  // getHtml: Signal<string>;\n  textEditorRef: MessageInputRefType;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  // getHtml,\n  textEditorRef,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n  const {isMessageInputChanged} = useMessageInputEvent(textEditorRef);\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!textEditorRef.current) return;\n    // const formattedText = parseHtmlAsFormattedText(getHtml());\n    const formattedText = textEditorRef.current.getFormattedText();\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [isMessageInputChanged], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, isMessageInputChanged], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    // return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n    return Boolean(webPagePreview && !textEditorRef.current?.isHtmlEmpty() && !noWebPage && !isDisabled);\n  }, [isDisabled, isMessageInputChanged, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\n// import deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\n// import { getHtmlBeforeSelection, insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n// import { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\nimport { Contest } from '../../contest/contest';\nimport { moveChatBackgroundSmoothly } from '../../contest/animated-chat/AnimatedChatBackground';\nimport { MessageInputController, useMessageInputEvent } from '../../contest/text-editor';\nimport NewMessageInput from '../../contest/text-editor/NewMessageInput';\nconst logger = Contest.createLogger(\"Composer.tsx\");\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  // const inputRef = useRef<HTMLDivElement>(null);\n  const messageInputRef = useRef<MessageInputController>(null);\n  const { isMessageInputChanged } = useMessageInputEvent(messageInputRef);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  // const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(() => {\n    processMessageInputForCustomEmoji();\n  }, [isMessageInputChanged]);\n\n  const canSendCustomEmoji = (emoji: ApiSticker, emojiSetId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return false;\n    }\n    return true;\n  }\n  // useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const handleMessageSent = useLastCallback(() => {\n    moveChatBackgroundSmoothly();\n  });\n\n  const handleEmojiSelect = useLastCallback((\n    emoji: string | ApiSticker\n  ) => {\n    messageInputRef.current?.insertEmoji(emoji);\n  });\n\n  // const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n  //   if (inInputId === editableInputId && isComposerBlocked) return;\n  //   const selection = window.getSelection()!;\n  //   let messageInput: HTMLDivElement;\n  //   if (inInputId === editableInputId) {\n  //     messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n  //   } else {\n  //     messageInput = document.getElementById(inInputId) as HTMLDivElement;\n  //   }\n\n  //   if (selection.rangeCount) {\n  //     const selectionRange = selection.getRangeAt(0);\n  //     if (isSelectionInsideInput(selectionRange, inInputId)) {\n  //       insertHtmlInSelection(newHtml);\n  //       messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n  //       return;\n  //     }\n  //   }\n\n  //   setHtml(`${getHtml()}${newHtml}`);\n\n  //   // If selection is outside of input, set cursor at the end of input\n  //   requestNextMutation(() => {\n  //     focusEditableElement(messageInput);\n  //   });\n  // });\n\n  // const insertTextAndUpdateCursor = useLastCallback((\n  //   text: string, inInputId: string = editableInputId,\n  // ) => {\n  //   textEditorRef.current?.insertTextAndUpdateCursor(text);\n  //   // const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n  //   //   .join('')\n  //   //   .replace(/\\u200b+/g, '\\u200b');\n  //   // insertHtmlAndUpdateCursor(newHtml, inInputId);\n  // });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    messageInputRef.current?.setup(text, {source: \"composer\"});\n    // const newHtml = getTextWithEntitiesAsHtml(text);\n    // insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  // const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n  //   textEditorRef.current?.insertEmoji(emoji);\n  //   // insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  // });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    logger.log(\"insertNextText\");\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    // onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    // setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (messageInputRef.current?.isTouched() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [isMessageInputChanged, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    // getHtml,\n    // setHtml,\n    messageInputRef,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    // getHtml,\n    // setHtml,\n    messageInputRef,\n    getSelectionRange,\n    // inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    // getHtml,\n    messageInputRef,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    // getHtml,\n    // setHtml,\n    messageInputRef,\n    getSelectionRange,\n    // inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    // getHtml,\n    messageInputRef,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    // getHtml,\n    messageInputRef,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    // getHtml,\n    // setHtml: setHtml,\n    messageInputRef: messageInputRef,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      // setHtml('');\n      messageInputRef.current?.resetEditor();\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    // getHtml,\n    // setHtml,\n    messageInputRef,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(messageInputRef.current?.isTouched() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(messageInputRef.current?.isTouched() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, isMessageInputChanged, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    if (!messageInputRef.current) return;\n    const { text, entities } = messageInputRef.current.getFormattedText();\n    // const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    if (!messageInputRef.current) return;\n    const { text, entities } = messageInputRef.current.getFormattedText();\n    // const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      handleMessageSent();\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      handleMessageSent();\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  // const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n  //   const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n  //   if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n  //     showCustomEmojiPremiumNotification();\n  //     return;\n  //   }\n\n  //   insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  // });\n\n  // const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n  //   handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  // });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    messageInputRef.current?.resetEditor();\n    // setHtml('');\n  }, [isComposerBlocked, messageInputRef, attachments]);\n\n  // const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n  //   insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  // });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    messageInputRef.current?.deleteLastCharacterOutsideSelection();\n    // setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    const isEditorEmpty = messageInputRef.current\n      ? messageInputRef.current.isHtmlEmpty()\n      : true;\n    return withBotMenuButton && !isEditorEmpty && !activeVoiceRecording;\n  }, [withBotMenuButton, messageInputRef, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({}); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        // getHtml={getHtml}\n        messageInputRef={messageInputRef}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        // onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleEmojiSelect}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={handleEmojiSelect}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        // getHtml={getHtml}\n        textEditorRef={messageInputRef}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              // getHtml={getHtml}\n              textEditorRef={messageInputRef}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={handleEmojiSelect}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <NewMessageInput\n            // ref={inputRef}\n            id={inputId}\n            messageInputRef={messageInputRef}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            // getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            // onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            canSendCustomEmoji={canSendCustomEmoji}\n          />\n          {/* <MessageInput\n            // ref={inputRef}\n            id={inputId}\n            textEditorRef={messageInputRef}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            // getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            // onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          /> */}\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  // setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  // setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    // onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiPeerColor } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getApiPeerColorClass, getPeerColorClass } from './helpers/peerColor';\n\nimport EmojiIconBackground from './embedded/EmojiIconBackground';\n\nimport styles from './PeerColorWrapper.module.scss';\n\ninterface OwnProps extends React.HTMLAttributes<HTMLDivElement> {\n  peer?: ApiPeer;\n  peerColor?: ApiPeerColor;\n  noUserColors?: boolean;\n  shoudReset?: boolean;\n  className?: string;\n  emojiIconClassName?: string;\n  children: React.ReactNode;\n}\n\nfunction PeerColorWrapper({\n  peer, peerColor, noUserColors, shoudReset, className, emojiIconClassName, children, ...otherProps\n}: OwnProps) {\n  const color = peerColor || peer?.color;\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        peer && getPeerColorClass(peer, noUserColors, shoudReset),\n        peerColor && getApiPeerColorClass(peerColor),\n        className,\n      )}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    >\n      {color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          className={emojiIconClassName}\n          emojiDocumentId={color.backgroundEmojiId}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default memo(PeerColorWrapper);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nRjVJOQv\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { isApiPeerChat } from '../../../../global/helpers/peers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            lastMessageSender && !isApiPeerChat(lastMessageSender) ? lastMessageSender : undefined,\n            lastMessageSender && isApiPeerChat(lastMessageSender) ? lastMessageSender : chat,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n  isFolderIconPicker?: boolean;\n  buttonIcon?: TeactNode;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n  isFolderIconPicker,\n  buttonIcon\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    getMenuElement()?.style.setProperty('--offset-y', '0');\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          {buttonIcon ?? <Icon name=\"smile\" />}\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          {buttonIcon ?? <Icon name=\"smile\" />}\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        isFolderIconPicker={isFolderIconPicker}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 10;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport { MessageInputRefType, useMessageInputEvent } from '../../../../contest/text-editor';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  // getHtml: Signal<string>,\n  // setHtml: (html: string) => void,\n  messageInputRef: MessageInputRefType,\n  getSelectionRange: Signal<Range | undefined>,\n  // inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n  const {isMessageInputChanged} = useMessageInputEvent(messageInputRef);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    if (!messageInputRef.current) return;\n    const html = messageInputRef.current.getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    // const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n    const htmlBeforeSelection = messageInputRef.current.getHtmlBeforeSelection();\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getSelectionRange, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, isMessageInputChanged], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    messageInputRef.current?.insertEmoji(emoji);\n    // const lastEmoji = getLastEmoji();\n    // if (!isEnabled || !lastEmoji) return;\n\n    // const inputEl = inputRef.current!;\n    // const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    // const regexText = IS_EMOJI_SUPPORTED\n    //   ? lastEmoji\n    //   // Escape regexp special chars\n    //   : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    // const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    // const matched = htmlBeforeSelection.match(regex)![0];\n    // const count = matched.length / lastEmoji.length;\n    // const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    // const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    // setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    // requestNextMutation(() => {\n    //   focusEditableElement(inputEl, true, true);\n    // });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, messageInputRef]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { RefObject, useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport { MessageInputRefType } from '../../../../contest/text-editor';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  // getHtml: Signal<string>,\n  // setHtml: (html: string) => void,\n  // inputId = EDITABLE_INPUT_ID,\n  textEditorRef: MessageInputRefType,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    if (!textEditorRef.current) return;\n    const html = textEditorRef.current.getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [textEditorRef, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, textEditorRef], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = textEditorRef.current?.getHtml();\n    // const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      textEditorRef.current?.insertEmoji(emoji);\n      // const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      // setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      // const messageInput = inputId === EDITABLE_INPUT_ID\n      //   ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n      //   : document.getElementById(inputId) as HTMLDivElement;\n\n      // requestNextMutation(() => {\n      //   focusEditableElement(messageInput, true, true);\n      // });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, textEditorRef]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport { MessageInputRefType, useMessageInputEvent } from '../../../../contest/text-editor';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  // getHtml: Signal<string>,\n  // setHtml: (html: string) => void,\n  messageInputRef: MessageInputRefType,\n  getSelectionRange: Signal<Range | undefined>,\n  // inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n  const {isMessageInputChanged} = useMessageInputEvent(messageInputRef);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    if (!messageInputRef.current) return;\n    // const html = getHtml();\n    const html = messageInputRef.current.getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    // const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n    const htmlBeforeSelection = messageInputRef.current.getHtmlBeforeSelection();\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, isMessageInputChanged, getSelectionRange, messageInputRef.current], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, isMessageInputChanged, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    // return isEnabled && getHtml().startsWith('@');\n    return isEnabled && messageInputRef.current?.getHtml().startsWith('@');\n  }, [isMessageInputChanged, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!messageInputRef.current) return;\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    // const inputEl = inputRef.current!;\n    // const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    // const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    // const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    // const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n    //   - (fixedHtmlBeforeSelection.length - atIndex);\n\n    // if (atIndex !== -1) {\n    //   const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n    //   const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n    //   const caretPosition = getCaretPosition(inputEl);\n    //   // setHtml(`${newHtml}${htmlAfterSelection}`);\n    //   messageInputRef.current.insertHtml(htmlAfterSelection);\n\n    //   requestNextMutation(() => {\n    //     const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n    //     focusEditableElement(inputEl, forceFocus);\n    //     if (newCaretPosition >= 0) {\n    //       setCaretPosition(inputEl, newCaretPosition);\n    //     }\n    //   });\n    // }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, isMessageInputChanged]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport { getGiftAttributes, getStickerFromGift } from '../../common/helpers/gifts';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const giftStickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(type) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const gift = webPage?.gift;\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(gift)!;\n    const attributes = getGiftAttributes(gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    return (\n      <div\n        className=\"web-page-gift web-page-centered web-page-unique\"\n        onClick={() => handleOpenTelegramLink()}\n      >\n        <div className=\"web-page-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"web-page-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n          />\n        </div>\n        <div ref={giftStickersRef} key={sticker.id} className=\"WebPage--unique-sticker\">\n          <StickerView\n            containerRef={giftStickersRef}\n            sticker={sticker}\n            size={STAR_GIFT_STICKER_SIZE}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          renderStarGiftUnique()\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// * Jolly Cobra's schedulers\ntype NoneToVoidFunction = () => void;\n\n/*\nexport function throttleWithTickEnd<F extends AnyToVoidFunction>(fn: F) {\n  return throttleWith(onTickEnd, fn);\n}\n\nexport function throttleWithNow<F extends AnyToVoidFunction>(fn: F) {\n  return throttleWith(runNow, fn);\n}\n\nexport function onTickEnd(cb: NoneToVoidFunction) {\n  Promise.resolve().then(cb);\n}\n\nfunction runNow(fn: NoneToVoidFunction) {\n  fn();\n} */\n\nlet fastRafCallbacks: NoneToVoidFunction[] | undefined;\nexport function fastRaf(callback: NoneToVoidFunction) {\n  if(!fastRafCallbacks) {\n    fastRafCallbacks = [callback];\n\n    requestAnimationFrame(() => {\n      const currentCallbacks = fastRafCallbacks!;\n      fastRafCallbacks = undefined;\n      currentCallbacks.forEach((cb) => cb());\n    });\n  } else {\n    fastRafCallbacks.push(callback);\n  }\n}\n\nlet fastRafConventionalCallbacks: NoneToVoidFunction[] | undefined, processing = false;\nexport function fastRafConventional(callback: NoneToVoidFunction) {\n  if(!fastRafConventionalCallbacks) {\n    fastRafConventionalCallbacks = [callback];\n\n    requestAnimationFrame(() => {\n      processing = true;\n      for(let i = 0; i < fastRafConventionalCallbacks!.length; ++i) {\n        fastRafConventionalCallbacks![i]();\n      }\n\n      fastRafConventionalCallbacks = undefined;\n      processing = false;\n    });\n  } else if(processing) {\n    callback();\n  } else {\n    fastRafConventionalCallbacks.push(callback);\n  }\n}\n\nlet rafPromise: Promise<void> | undefined;\nexport function fastRafPromise() {\n  if(rafPromise) return rafPromise;\n\n  rafPromise = new Promise<void>((resolve) => fastRaf(() => resolve()));\n  rafPromise.then(() => {\n    rafPromise = undefined;\n  });\n\n  return rafPromise;\n}\n\nexport function doubleRaf() {\n  return new Promise<void>((resolve) => {\n    fastRaf(() => {\n      fastRaf(resolve);\n    });\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nfunction noop() {}\n\nexport interface CancellablePromise<T> extends Promise<T> {\n  resolve?: (value: T) => void,\n  reject?: (...args: any[]) => void,\n  cancel?: (reason?: any) => void,\n\n  notify?: (...args: any[]) => void,\n  notifyAll?: (...args: any[]) => void,\n  lastNotify?: any,\n  listeners?: Array<(...args: any[]) => void>,\n  addNotifyListener?: (callback: (...args: any[]) => void) => void,\n\n  isFulfilled?: boolean,\n  isRejected?: boolean,\n\n  onFinish?: () => void,\n  _resolve?: (value: T) => void,\n  _reject?: (...args: any[]) => void\n}\n\nconst deferredHelper = {\n  isFulfilled: false,\n  isRejected: false,\n\n  notify: () => {},\n  notifyAll: function(...args: any[]) {\n    this.lastNotify = args;\n    this.listeners?.forEach((callback: any) => callback(...args));\n  },\n\n  addNotifyListener: function(callback: (...args: any[]) => void) {\n    if(this.lastNotify) {\n      callback(...this.lastNotify);\n    }\n\n    (this.listeners ??= []).push(callback);\n  },\n\n  resolve: function(value) {\n    if(this.isFulfilled || this.isRejected) return;\n\n    this.isFulfilled = true;\n    this._resolve?.(value);\n    this.onFinish?.();\n  },\n\n  reject: function(...args) {\n    if(this.isRejected || this.isFulfilled) return;\n\n    this.isRejected = true;\n    this._reject?.(...args);\n    this.onFinish?.();\n  },\n\n  onFinish: function() {\n    this.notify = this.notifyAll = this.lastNotify = null;\n    if(this.listeners) this.listeners.length = 0;\n\n    if(this.cancel) {\n      this.cancel = noop;\n    }\n  }\n} as CancellablePromise<any>;\n\nexport default function deferredPromise<T>() {\n  let resolve!: (value: T) => void;\n  let reject!: (...args: any[]) => void;\n\n  const deferred: CancellablePromise<T> = new Promise<T>((_resolve, _reject) => {\n    resolve = _resolve, reject = _reject;\n  });\n\n  Object.assign(deferred, deferredHelper);\n  deferred._resolve = resolve;\n  deferred._reject = reject;\n\n  return deferred;\n}\n\nexport function bindPromiseToDeferred<T>(promise: Promise<T>, deferred: CancellablePromise<T>) {\n  promise.then(deferred.resolve.bind(deferred), deferred.reject.bind(deferred));\n}\n\n(self as any).deferredPromise = deferredPromise;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// * Jolly Cobra's animation.ts\n\nimport {fastRaf} from './schedulers';\nimport deferredPromise, {CancellablePromise} from './cancellablePromise';\n\ninterface AnimationInstance {\n  isCancelled: boolean;\n  deferred: CancellablePromise<void>\n}\n\ntype AnimationInstanceKey = any;\nconst instances: Map<AnimationInstanceKey, AnimationInstance> = new Map();\n\nexport function createAnimationInstance(key: AnimationInstanceKey) {\n  cancelAnimationByKey(key);\n\n  const instance: AnimationInstance = {\n    isCancelled: false,\n    deferred: deferredPromise<void>()\n  };\n\n  instances.set(key, instance);\n  instance.deferred.then(() => {\n    if(getAnimationInstance(key) === instance) {\n      instances.delete(key);\n    }\n  });\n\n  return instance;\n}\n\nexport function getAnimationInstance(key: AnimationInstanceKey) {\n  return instances.get(key);\n}\n\nexport function cancelAnimationByKey(key: AnimationInstanceKey) {\n  const instance = getAnimationInstance(key);\n  if(instance) {\n    instance.isCancelled = true;\n    instance.deferred.resolve?.();\n  }\n}\n\nexport function animateSingle(tick: Function, key: AnimationInstanceKey, instance?: AnimationInstance) {\n  if(!instance) {\n    instance = createAnimationInstance(key);\n  }\n\n  fastRaf(() => {\n    if(instance.isCancelled) {\n      return;\n    }\n\n    if(tick()) {\n      animateSingle(tick, key, instance);\n    } else {\n      instance.deferred.resolve?.();\n    }\n  });\n\n  return instance.deferred;\n}\n\nexport function animate(tick: Function) {\n  fastRaf(() => {\n    if(tick()) {\n      animate(tick);\n    }\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n/**\n * @link https://core.telegram.org/type/WallPaper\n */\nexport type WallPaper = WallPaper.wallPaper | WallPaper.wallPaperNoFile;\n\n/**\n * @link https://core.telegram.org/type/WallPaperSettings\n */\nexport type WallPaperSettings = WallPaperSettings.wallPaperSettings;\n\nexport namespace WallPaperSettings {\n  export type wallPaperSettings = {\n    _: 'wallPaperSettings',\n    flags?: number,\n    pFlags: Partial<{\n      blur?: true,\n      motion?: true,\n    }>,\n    background_color?: number,\n    second_background_color?: number,\n    third_background_color?: number,\n    fourth_background_color?: number,\n    intensity?: number,\n    rotation?: number,\n    emoticon?: string\n  };\n}\n\nexport namespace WallPaper {\n  export type wallPaper = {\n    _: 'wallPaper',\n    id: string | number,\n    flags?: number,\n    pFlags: Partial<{\n      creator?: true,\n      default?: true,\n      pattern?: true,\n      dark?: true,\n    }>,\n    access_hash: string | number,\n    slug: string,\n    document: Document,\n    settings?: WallPaperSettings\n  };\n\n  export type wallPaperNoFile = {\n    _: 'wallPaperNoFile',\n    id: string | number,\n    flags?: number,\n    pFlags: Partial<{\n      default?: true,\n      dark?: true,\n    }>,\n    settings?: WallPaperSettings\n  };\n}\n\nexport default function clamp(v: number, min: number, max: number): number {\n  return Math.min(max, Math.max(min, v));\n}\n\nexport type ColorHsla = {\n  h: number,\n  s: number,\n  l: number,\n  a: number\n};\n\nexport type ColorRgba = [number, number, number, number];\nexport type ColorRgb = [number, number, number];\n\n/**\n * https://stackoverflow.com/a/54070620/6758968\n * r, g, b in [0, 255]\n * @returns h in [0,360) and s, v in [0,1]\n */\nexport function rgbToHsv(r: number, g: number, b: number): [number, number, number] {\n  r /= 255, g /= 255, b /= 255;\n  const v = Math.max(r, g, b),\n    c = v - Math.min(r, g, b);\n  const h = c && ((v === r) ? (g - b ) / c : ((v == g) ? 2 + (b - r) / c : 4 + (r - g) / c));\n  return [60 * (h < 0 ? h + 6 : h), v && c / v, v];\n}\n\n/**\n * https://stackoverflow.com/a/54024653/6758968\n * @param h [0, 360]\n * @param s [0, 1]\n * @param v [0, 1]\n * @returns r, g, b in [0, 255]\n */\nexport function hsvToRgb(h: number, s: number, v: number): ColorRgb {\n  const f = (n: number, k: number = (n + h / 60) % 6) => Math.round((v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)) * 255);\n  return [f(5), f(3), f(1)];\n}\n\n/**\n * @returns h [0, 360], s [0, 100], l [0, 100], a [0, 1]\n */\nexport function rgbaToHsla(r: number, g: number, b: number, a: number = 1): ColorHsla {\n  r /= 255, g /= 255, b /= 255;\n  const max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  let h: number, s: number;\n  const l = (max + min) / 2;\n\n  if(max === min) {\n    h = s = 0; // achromatic\n  } else {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch(max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return {\n    h: h * 360,\n    s: s * 100,\n    l: l * 100,\n    a\n  };\n}\n\nexport function hslaToString(hsla: ColorHsla) {\n  return `hsla(${hsla.h}, ${hsla.s}%, ${hsla.l}%, ${hsla.a})`;\n}\n\n// * https://stackoverflow.com/a/9493060/6758968\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n *\n * @param   {number}  h       The hue [0, 360]\n * @param   {number}  s       The saturation [0, 1]\n * @param   {number}  l       The lightness [0, 1]\n * @return  {Array}           The RGB representation [0, 255]\n */\nexport function hslaToRgba(h: number, s: number, l: number, a: number): ColorRgba {\n  h /= 360, s /= 100, l /= 100;\n  let r: number, g: number, b: number;\n\n  if(s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    const hue2rgb = function hue2rgb(p: number, q: number, t: number) {\n      if(t < 0) t += 1;\n      if(t > 1) t -= 1;\n      if(t < 1/6) return p + (q - p) * 6 * t;\n      if(t < 1/2) return q;\n      if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n      return p;\n    }\n\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n\n  return [r, g, b, a].map((v) => Math.round(v * 255)) as ColorRgba;\n}\n\nexport function hslaStringToRgba(hsla: string) {\n  const splitted = hsla.slice(5, -1).split(', ');\n  const alpha = +splitted.pop();\n  const arr = splitted.map((val) => {\n    if(val.endsWith('%')) {\n      return +val.slice(0, -1);\n    }\n\n    return +val;\n  });\n\n  return hslaToRgba(arr[0], arr[1], arr[2], alpha);\n}\n\nexport function hexaToRgba(hexa: string) {\n  const arr: ColorRgba = [] as any;\n  const offset = hexa[0] === '#' ? 1 : 0;\n  if(hexa.length === (5 + offset)) {\n    hexa = (offset ? '#' : '') + '0' + hexa.slice(offset);\n  }\n\n  if(hexa.length === (3 + offset)) {\n    for(let i = offset; i < hexa.length; ++i) {\n      arr.push(parseInt(hexa[i] + hexa[i], 16));\n    }\n  } else if(hexa.length === (4 + offset)) {\n    for(let i = offset; i < (hexa.length - 1); ++i) {\n      arr.push(parseInt(hexa[i] + hexa[i], 16));\n    }\n\n    arr.push(parseInt(hexa[hexa.length - 1], 16));\n  } else {\n    for(let i = offset; i < hexa.length; i += 2) {\n      arr.push(parseInt(hexa.slice(i, i + 2), 16));\n    }\n  }\n\n  return arr;\n}\n\nexport function hexToRgb(hex: string) {\n  return hexaToRgba(hex.slice(0, 7)) as any as ColorRgb;\n}\n\nexport function hexaToHsla(hexa: string) {\n  const rgba = hexaToRgba(hexa);\n  return rgbaToHsla(rgba[0], rgba[1], rgba[2], rgba[3]);\n}\n\nexport function rgbaToHexa(rgba: ColorRgba | ColorRgb) {\n  return '#' + rgba.map((v) => ('0' + v.toString(16)).slice(-2)).join('');\n}\n\nexport function hslaStringToHexa(hsla: string) {\n  return rgbaToHexa(hslaStringToRgba(hsla));\n}\n\nexport function hslaStringToHex(hsla: string) {\n  return hslaStringToHexa(hsla).slice(0, -2);\n}\n\n/**\n * @param weight [0, 1]\n */\nexport function mixColors(color1: ColorRgb, color2: ColorRgb, weight: number) {\n  const out = new Array<number>(3) as ColorRgb;\n  for(let i = 0; i < 3; ++i) {\n    const v1 = color1[i], v2 = color2[i];\n    out[i] = Math.floor(v2 + (v1 - v2) * weight);\n  }\n\n  return out;\n}\n\nexport function computePerceivedBrightness(color: ColorRgb) {\n  return (color[0] * 0.2126 + color[1] * 0.7152 + color[2] * 0.0722) / 255;\n}\n\nexport function getAverageColor(color1: ColorRgb, color2: ColorRgb): ColorRgb {\n  return color1.map((v, i) => Math.round((v + color2[i]) / 2)) as ColorRgb;\n}\n\nexport function getAccentColor(baseHsv: number[], baseColor: ColorRgb, elementColor: ColorRgb): ColorRgb {\n  const hsvTemp3 = rgbToHsv(...baseColor);\n  const hsvTemp4 = rgbToHsv(...elementColor);\n\n  const dist = Math.min(1.5 * hsvTemp3[1] / baseHsv[1], 1);\n\n  hsvTemp3[0] = Math.min(360, hsvTemp4[0] - hsvTemp3[0] + baseHsv[0]);\n  hsvTemp3[1] = Math.min(1, hsvTemp4[1] * baseHsv[1] / hsvTemp3[1]);\n  hsvTemp3[2] = Math.min(1, (hsvTemp4[2] / hsvTemp3[2] + dist - 1) * baseHsv[2] / dist);\n  if(hsvTemp3[2] < 0.3) {\n    return elementColor;\n  }\n  return hsvToRgb(...hsvTemp3);\n}\n\nexport function changeColorAccent(baseHsv: number[], accentHsv: number[], color: ColorRgb, isDarkTheme: boolean) {\n  const colorHsv = rgbToHsv(...color);\n\n  const diffH = Math.min(Math.abs(colorHsv[0] - baseHsv[0]), Math.abs(colorHsv[0] - baseHsv[0] - 360));\n  if(diffH > 30) {\n    return color;\n  }\n\n  const dist = baseHsv[1] ? Math.min(1.5 * colorHsv[1] / baseHsv[1], 1) : 0;\n\n  colorHsv[0] = Math.min(360, colorHsv[0] + accentHsv[0] - baseHsv[0]);\n  colorHsv[1] = baseHsv[1] ? Math.min(1, colorHsv[1] * accentHsv[1] / baseHsv[1]) : 0;\n  colorHsv[2] = baseHsv[2] ? Math.min(1, colorHsv[2] * (1 - dist + dist * accentHsv[2] / baseHsv[2])) : 0;\n\n  let newColor = hsvToRgb(...colorHsv);\n\n  const origBrightness = computePerceivedBrightness(color);\n  const newBrightness = computePerceivedBrightness(newColor);\n\n  // We need to keep colors lighter in dark themes and darker in light themes\n  const needRevertBrightness = isDarkTheme ? origBrightness > newBrightness : origBrightness < newBrightness;\n\n  if(needRevertBrightness) {\n    const amountOfNew = 0.6;\n    const fallbackAmount = (1 - amountOfNew) * origBrightness / newBrightness + amountOfNew;\n    newColor = changeBrightness(newColor, fallbackAmount);\n  }\n\n  return newColor;\n}\n\nexport function changeBrightness(color: ColorRgb, amount: number) {\n  return color.map((v) => clamp(Math.round(v * amount), 0, 255)) as ColorRgb;\n}\n\nexport function getHexColorFromTelegramColor(color: number) {\n  const hex = (color < 0 ? 0xFFFFFF + color : color).toString(16);\n  return '#' + (hex.length >= 6 ? hex : '0'.repeat(6 - hex.length) + hex);\n}\n\nexport function getRgbColorFromTelegramColor(color: number) {\n  return hexToRgb(getHexColorFromTelegramColor(color));\n}\n\nexport function getColorsFromWallPaper(wallPaper: WallPaper) {\n  return wallPaper.settings ? [\n    wallPaper.settings.background_color,\n    wallPaper.settings.second_background_color,\n    wallPaper.settings.third_background_color,\n    wallPaper.settings.fourth_background_color\n  ].filter(Boolean).map(getHexColorFromTelegramColor).join(',') : '';\n}\n\nexport function rgbaToRgb(rgba: ColorRgba, bg: ColorRgb): ColorRgb {\n  const a = rgba[3];\n  return rgba.slice(0, 3).map((color, idx) => {\n    return clamp(Math.round((a * (color / 255) + (a * (bg[idx] / 255))) * 255), 0, 255);\n  }) as ColorRgb;\n}\n\nexport function calculateLuminance(rgb: ColorRgb) {\n  const [r, g, b] = rgb;\n  const luminance = (0.2126 * r / 255 + 0.7152 * g / 255 + 0.0722 * b / 255);\n  return luminance;\n}\n\nexport function getTextColor(luminance: number): ColorRgb {\n  return luminance > 0.5 ? [0, 0, 0] : [255, 255, 255];\n}\n\nexport function calculateOpacity(luminance: number, targetContrast: number) {\n  const targetTextLuminance = luminance > 0.5 ? 0 : 1;\n  const adaptiveOpacity = (luminance - targetTextLuminance + targetContrast) / targetContrast;\n  const opacity = +Math.max(0.5, Math.min(0.64, adaptiveOpacity)).toFixed(2);\n\n  return opacity;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko, Artem Kolnogorov and unknown creator of the script taken from http://useless.altervista.org/gradient.html\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {animateSingle} from './helpers/animation';\nimport {hexToRgb} from './helpers/color';\nimport {easeOutQuadApply} from './helpers/easing/easeOutQuad';\n\nconst WIDTH = 50;\nconst HEIGHT = WIDTH;\n\ntype Point = {x: number, y: number};\n\nexport default class ChatBackgroundGradientRenderer {\n  private readonly _width = WIDTH;\n  private readonly _height = HEIGHT;\n  private _phase!: number;\n  private _tail!: number;\n  private readonly _tails = 90;\n  // private readonly _scrollTails = 50;\n  private _frames!: ImageData[];\n  private _colors!: {r: number, g: number, b: number}[];\n  private readonly _curve = [\n    0, 0.25, 0.50, 0.75, 1, 1.5, 2, 2.5, 3, 3.5, 4, 5, 6, 7, 8, 9, 10, 11, 12,\n    13, 14, 15, 16, 17, 18, 18.3, 18.6, 18.9, 19.2, 19.5, 19.8, 20.1, 20.4, 20.7,\n    21.0, 21.3, 21.6, 21.9, 22.2, 22.5, 22.8, 23.1, 23.4, 23.7, 24.0, 24.3, 24.6,\n    24.9, 25.2, 25.5, 25.8, 26.1, 26.3, 26.4, 26.5, 26.6, 26.7, 26.8, 26.9, 27\n  ];\n  private readonly _incrementalCurve: number[];\n  private readonly _positions: Point[] = [\n    {x: 0.80, y: 0.10},\n    {x: 0.60, y: 0.20},\n    {x: 0.35, y: 0.25},\n    {x: 0.25, y: 0.60},\n    {x: 0.20, y: 0.90},\n    {x: 0.40, y: 0.80},\n    {x: 0.65, y: 0.75},\n    {x: 0.75, y: 0.40}\n  ];\n  private readonly _phases = this._positions.length;\n  // private _onWheelRAF: number;\n  // private _scrollDelta: number;\n\n  // private _ts = 0;\n  // private _fps = 15;\n  // private _frametime = 1000 / this._fps;\n  // private _raf: number;\n\n  private _canvas!: HTMLCanvasElement;\n  private _ctx!: CanvasRenderingContext2D;\n  private _hc!: HTMLCanvasElement;\n  private _hctx!: CanvasRenderingContext2D;\n\n  // private _addedScrollListener: boolean;\n  private _animatingToNextPosition?: boolean;\n  private _nextPositionTail?: number;\n  private _nextPositionTails?: number;\n  private _nextPositionLeft?: number;\n\n  constructor() {\n    const diff = this._tails / this._curve[this._curve.length - 1];\n\n    for(let i = 0, length = this._curve.length; i < length; ++i) {\n      this._curve[i] = this._curve[i] * diff;\n    }\n\n    this._incrementalCurve = this._curve.map((v, i, arr) => {\n      return v - (arr[i - 1] ?? 0);\n    });\n  }\n\n  private hexToRgb(hex: string) {\n    const result = hexToRgb(hex);\n    return {r: result[0], g: result[1], b: result[2]};\n  }\n\n  private getPositions(shift: number) {\n    const positions = this._positions.slice();\n    positions.push(...positions.splice(0, shift));\n\n    const result: typeof positions = [];\n    for(let i = 0; i < positions.length; i += 2) {\n      result.push(positions[i]);\n    }\n    return result;\n  }\n\n  private getNextPositions(phase: number, curveMax: number, curve: number[]) {\n    const pos = this.getPositions(phase);\n    if(!curve[0] && curve.length === 1) {\n      return [pos];\n    }\n\n    const nextPos = this.getPositions(++phase % this._phases);\n    const distances = nextPos.map((nextPos, idx) => {\n      return {\n        x: (nextPos.x - pos[idx].x) / curveMax,\n        y: (nextPos.y - pos[idx].y) / curveMax\n      };\n    });\n\n    const positions = curve.map((value) => {\n      return distances.map((distance, idx) => {\n        return {\n          x: pos[idx].x + distance.x * value,\n          y: pos[idx].y + distance.y * value\n        };\n      });\n    });\n\n    return positions;\n  }\n\n  private curPosition(phase: number, tail: number) {\n    const positions = this.getNextPositions(phase, this._tails, [tail]);\n    return positions[0];\n  }\n\n  private changeTail(diff: number) {\n    this._tail += diff;\n\n    while(this._tail >= this._tails) {\n      this._tail -= this._tails;\n      if(++this._phase >= this._phases) {\n        this._phase -= this._phases;\n      }\n    }\n\n    while(this._tail < 0) {\n      this._tail += this._tails;\n      if(--this._phase < 0) {\n        this._phase += this._phases;\n      }\n    }\n  }\n\n  // private onWheel = (e: {deltaY: number}) => {\n  //   if(this._animatingToNextPosition) {\n  //     return;\n  //   }\n\n  //   this._scrollDelta += e.deltaY;\n  //   if(this._onWheelRAF === undefined) {\n  //     this._onWheelRAF = requestAnimationFrame(this.drawOnWheel);\n  //   }\n  // };\n\n  private changeTailAndDraw(diff: number) {\n    this.changeTail(diff);\n    const curPos = this.curPosition(this._phase, this._tail);\n    this.drawGradient(curPos);\n  }\n\n  // private drawOnWheel = () => {\n  //   const value = this._scrollDelta / this._scrollTails;\n  //   this._scrollDelta %= this._scrollTails;\n  //   const diff = value > 0 ? Math.floor(value) : Math.ceil(value);\n  //   if(diff) {\n  //     this.changeTailAndDraw(diff);\n  //   }\n  //   this._onWheelRAF = undefined;\n  // };\n\n  private drawNextPositionAnimated = (getProgress?: () => number) => {\n    let done: boolean, id!: ImageData;\n    if(getProgress) {\n      const value = getProgress();\n      done = value >= 1;\n      const transitionValue = easeOutQuadApply(value, 1);\n      const nextPositionTail = this._nextPositionTail ?? 0;\n      const tail = this._nextPositionTail = this._nextPositionTails! * transitionValue;\n      const diff = tail - nextPositionTail;\n      if(diff) {\n        this._nextPositionLeft! -= diff;\n        this.changeTailAndDraw(-diff);\n      }\n    } else {\n      const frames = this._frames;\n      id = frames.shift()!;\n      done = !frames.length;\n    }\n\n    if(id) {\n      this.drawImageData(id);\n    }\n\n    if(done) {\n      this._nextPositionLeft = undefined;\n      this._nextPositionTails = undefined;\n      this._nextPositionTail = undefined;\n      this._animatingToNextPosition = undefined;\n    }\n\n    return !done;\n  };\n\n  private getGradientImageData(positions: Point[], phase = this._phase, progress = 1 - this._tail / this._tails) {\n    const id = this._hctx.createImageData(this._width, this._height);\n    const pixels = id.data;\n    const colorsLength = this._colors.length;\n\n    const positionsForPhase = (phase: number) => {\n      const result: typeof positions = [];\n      for(let i = 0; i != 4; ++i) {\n        result[i] = {...this._positions[(phase + i * 2) % this._positions.length]};\n        result[i].y = 1.0 - result[i].y;\n      }\n      return result;\n    };\n\n    const previousPhase = (phase + 1) % this._positions.length;\n    const previous = positionsForPhase(previousPhase);\n    const current = positionsForPhase(phase);\n\n    let offset = 0;\n    for(let y = 0; y < this._height; ++y) {\n      const directPixelY = y / this._height;\n      const centerDistanceY = directPixelY - 0.5;\n      const centerDistanceY2 = centerDistanceY * centerDistanceY;\n      for(let x = 0; x < this._width; ++x) {\n        const directPixelX = x / this._width;\n        const centerDistanceX = directPixelX - 0.5;\n        const centerDistance = Math.sqrt(centerDistanceX * centerDistanceX + centerDistanceY2);\n\n        const swirlFactor = 0.35 * centerDistance;\n        const theta = swirlFactor * swirlFactor * 0.8 * 8.0;\n        const sinTheta = Math.sin(theta);\n        const cosTheta = Math.cos(theta);\n\n        const pixelX = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * cosTheta - centerDistanceY * sinTheta));\n        const pixelY = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * sinTheta + centerDistanceY * cosTheta));\n\n        let distanceSum = 0.0;\n        let r = 0.0;\n        let g = 0.0;\n        let b = 0.0;\n        for(let i = 0; i < colorsLength; ++i) {\n          const colorX = previous[i].x + (current[i].x - previous[i].x) * progress;\n          const colorY = previous[i].y + (current[i].y - previous[i].y) * progress;\n\n          const distanceX = pixelX - colorX;\n          const distanceY = pixelY - colorY;\n\n          let distance = Math.max(0.0, 0.9 - Math.sqrt(distanceX * distanceX + distanceY * distanceY));\n          distance = distance * distance * distance * distance;\n          distanceSum += distance;\n\n          r += distance * this._colors[i].r;\n          g += distance * this._colors[i].g;\n          b += distance * this._colors[i].b;\n        }\n\n        pixels[offset++] = r / distanceSum;\n        pixels[offset++] = g / distanceSum;\n        pixels[offset++] = b / distanceSum;\n        pixels[offset++] = 0xFF;\n      }\n    }\n    return id;\n  }\n\n  private drawImageData(id: ImageData) {\n    this._hctx.putImageData(id, 0, 0);\n    this._ctx.drawImage(this._hc, 0, 0, this._width, this._height);\n  }\n\n  private drawGradient(positions: Point[]) {\n    this.drawImageData(this.getGradientImageData(positions));\n  }\n\n  // private doAnimate = () => {\n  //   const now = +Date.now();\n  //   if(!document.hasFocus() || (now - this._ts) < this._frametime) {\n  //     this._raf = requestAnimationFrame(this.doAnimate);\n  //     return;\n  //   }\n\n  //   this._ts = now;\n  //   this.changeTail(1);\n  //   const cur_pos = this.curPosition(this._phase, this._tail);\n  //   this.drawGradient(cur_pos);\n  //   this._raf = requestAnimationFrame(this.doAnimate);\n  // };\n\n  // public animate(start?: boolean) {\n  //   if(!start) {\n  //     cancelAnimationFrame(this._raf);\n  //     return;\n  //   }\n  //   this.doAnimate();\n  // }\n\n  public init(el: HTMLCanvasElement) {\n    this._frames = [];\n    this._phase = 0;\n    this._tail = 0;\n    // this._scrollDelta = 0;\n    // if(this._onWheelRAF !== undefined) {\n    //   cancelAnimationFrame(this._onWheelRAF);\n    //   this._onWheelRAF = undefined;\n    // }\n\n    const colors = el.getAttribute('data-colors')!.split(',');\n    this._colors = colors.map((color) => {\n      return this.hexToRgb(color);\n    });\n\n    if(!this._hc) {\n      this._hc = document.createElement('canvas');\n      this._hc.width = this._width;\n      this._hc.height = this._height;\n      this._hctx = this._hc.getContext('2d', {alpha: false})!;\n    }\n\n    this._canvas = el;\n    this._ctx = this._canvas.getContext('2d', {alpha: false})!;\n    this.update();\n  }\n\n  private update() {\n    if(this._colors.length < 2) {\n      const color = this._colors[0];\n      this._ctx.fillStyle = `rgb(${color.r}, ${color.g}, ${color.b})`;\n      this._ctx.fillRect(0, 0, this._width, this._height);\n      return;\n    }\n\n    const position = this.curPosition(this._phase, this._tail);\n    this.drawGradient(position);\n  }\n\n  public toNextPosition(getProgress?: () => number) {\n    if(this._colors.length < 2) {\n      return;\n    }\n\n    if(getProgress) {\n      this._nextPositionLeft = this._tails + (this._nextPositionLeft ?? 0);\n      this._nextPositionTails = this._nextPositionLeft;\n      this._nextPositionTail = undefined;\n      this._animatingToNextPosition = true;\n      animateSingle(this.drawNextPositionAnimated.bind(this, getProgress), this);\n      return;\n    }\n\n    const tail = this._tail;\n    const tails = this._tails;\n\n    let nextPhaseOnIdx!: number;\n\n    const curve: number[] = [];\n    for(let i = 0, length = this._incrementalCurve.length; i < length; ++i) {\n      const inc = this._incrementalCurve[i];\n      let value = (curve[i - 1] ?? tail) + inc;\n\n      if(+value.toFixed(2) > tails && nextPhaseOnIdx === undefined) {\n        nextPhaseOnIdx = i;\n        value %= tails;\n      }\n\n      curve.push(value);\n    }\n\n    const currentPhaseCurve = curve.slice(0, nextPhaseOnIdx);\n    const nextPhaseCurve = nextPhaseOnIdx !== undefined ? curve.slice(nextPhaseOnIdx) : [];\n\n    [currentPhaseCurve, nextPhaseCurve].forEach((curve, idx, curves) => {\n      const last = curve[curve.length - 1];\n      if(last !== undefined && last > tails) {\n        curve[curve.length - 1] = +last.toFixed(2);\n      }\n\n      this._tail = last ?? 0;\n\n      if(!curve.length) {\n        return;\n      }\n\n      const positions = this.getNextPositions(this._phase, tails, curve);\n      if(idx !== (curves.length - 1)) {\n        if(++this._phase >= this._phases) {\n          this._phase -= this._phases;\n        }\n      }\n\n      const ids = positions.map((pos) => {\n        return this.getGradientImageData(pos);\n      });\n\n      this._frames.push(...ids);\n    });\n\n    this._animatingToNextPosition = true;\n    animateSingle(this.drawNextPositionAnimated, this);\n  }\n\n  // public toNextPositionThrottled = throttle(this.toNextPosition.bind(this), 100, true);\n\n  // public scrollAnimate(start?: boolean) {\n  //   return;\n\n  //   if(this._colors.length < 2 && start) {\n  //     return;\n  //   }\n\n  //   if(start && !this._addedScrollListener) {\n  //     document.addEventListener('wheel', this.onWheel);\n  //     this._addedScrollListener = true;\n  //   } else if(!start && this._addedScrollListener) {\n  //     document.removeEventListener('wheel', this.onWheel);\n  //     this._addedScrollListener = false;\n  //   }\n  // }\n\n  public cleanup() {\n    // this.scrollAnimate(false);\n    // this.animate(false);\n  }\n\n  public static createCanvas(colors?: string) {\n    const canvas = document.createElement('canvas');\n    canvas.width = WIDTH;\n    canvas.height = HEIGHT;\n    if(colors !== undefined) {\n      canvas.dataset.colors = colors;\n    }\n\n    return canvas;\n  }\n\n  public static create(colors?: string) {\n    const canvas = this.createCanvas(colors);\n    const gradientRenderer = new ChatBackgroundGradientRenderer();\n    gradientRenderer.init(canvas);\n\n    return {gradientRenderer, canvas};\n  }\n}\n","export default function easeOutQuad(t: number, b: number, c: number, d: number) {\n  return t >= d ? b + c : easeOutQuadApply(t / d, c) + b;\n}\n\nexport function easeOutQuadApply(v: number, c: number) {\n  return -c * v * (v - 2);\n}\n","/**\n * ignores `undefined` properties\n */\nexport default function deepEqual<T>(x: T, y: T, ignoreKeys?: (keyof T)[]): boolean {\n  const ignoreSet = ignoreKeys && new Set(ignoreKeys);\n  const okok = (obj: any) => Object.keys(obj).filter((key) => obj[key] !== undefined);\n  const ok = ignoreKeys ? (obj: any) => okok(obj).filter((key) => !ignoreSet.has(key as any)) : okok,\n    tx = typeof x,\n    ty = typeof y;\n  return x && y && tx === 'object' && tx === ty ? (\n    ok(x).length === ok(y).length &&\n      ok(x).every((key) => deepEqual((x as any)[key], (y as any)[key], ignoreKeys))\n  ) : (x === y);\n}\n","const ctx = typeof(window) !== 'undefined' ? window : self;\n\nexport default ctx;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from './ctx';\n\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\nexport const CHROMIUM_VERSION = (() => {\n  try {\n    const match = navigator.userAgent.match(/Chrom(?:e|ium)\\/(.+?)(?:\\s|\\.)/);\n    return match ? +match[1] : null;\n  } catch(err) {\n  }\n})();\n\n// https://stackoverflow.com/a/58065241\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\n  !(ctx as any).MSStream;\n\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\n\nexport const IS_MOBILE = (navigator.maxTouchPoints === undefined || navigator.maxTouchPoints > 0) && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\n","export const CRBUG_1250841_ERROR = 'DECODER_ERROR_NOT_SUPPORTED: Audio configuration specified 2 channels, but FFmpeg thinks the file contains 1 channels';\n\nexport default function isCrbug1250841Error(err: MediaError) {\n  return err.code ===  4 && err.message === CRBUG_1250841_ERROR;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport onMediaLoad from '../onMediaLoad';\n\ntype MaybePromise<T> = Promise<T> | T;\n// import { getHeavyAnimationPromise } from \"../../hooks/useHeavyAnimationCheck\";\n\nexport const loadedURLs: {[url: string]: boolean} = {};\nconst set = (elem: HTMLElement | HTMLImageElement | SVGImageElement | HTMLVideoElement, url: string) => {\n  if(elem instanceof HTMLImageElement || elem instanceof HTMLVideoElement) elem.src = url;\n  else if(elem instanceof SVGImageElement) elem.setAttributeNS(null, 'href', url);\n  else elem.style.backgroundImage = 'url(' + url + ')';\n};\n\n// проблема функции в том, что она не подходит для ссылок, пригодна только для blob'ов, потому что обычным ссылкам нужен 'load' каждый раз.\nexport default function renderImageFromUrl(\n  elem: HTMLElement | HTMLImageElement | SVGImageElement | HTMLVideoElement,\n  url: string,\n  callback?: () => void,\n  useCache?: boolean,\n  processImageOnLoad?: (image: HTMLImageElement) => void\n): MaybePromise<void> {\n  if(processImageOnLoad) useCache = false;\n  useCache ??= processImageOnLoad === undefined;\n\n  if(!url) {\n    console.error('renderImageFromUrl: no url?', elem, url);\n    callback?.();\n    return;\n  }\n\n  const isVideo = elem instanceof HTMLVideoElement;\n  if(((loadedURLs[url]/*  && false */) && useCache) || isVideo) {\n    /* if(isVideo) {\n      const source = document.createElement('source');\n      source.src = url;\n      source.type = 'video/webm';\n      elem.append(source);\n    } else  */if(elem) {\n      set(elem, url);\n    }\n\n    if(callback) {\n      if(isVideo) {\n        return onMediaLoad(elem).then(callback);\n      } else {\n        callback?.();\n      }\n      // callback && getHeavyAnimationPromise().then(() => callback());\n    }\n  } else {\n    const isImage = elem instanceof HTMLImageElement;\n    const loader = isImage ? elem : new Image();\n    // const loader = new Image();\n    // let perf = performance.now();\n\n    const onLoad = () => {\n      if(!isImage && elem) {\n        set(elem, url);\n      }\n\n      loadedURLs[url] = true;\n      // console.log('onload:', url, performance.now(), loader.naturalWidth, loader.naturalHeight);\n      processImageOnLoad?.(loader);\n      // TODO: переделать прогрузки аватаров до начала анимации, иначе с этим ожиданием они неприятно появляются\n      // callback && getHeavyAnimationPromise().then(() => callback());\n      callback?.();\n\n      // if(loader.naturalWidth) {\n      //   const interval = setInterval(() => {\n      //     if(!loader.naturalWidth) {\n      //       const parents = getParents(loader);\n      //       console.warn('image no dimensions', loader.isConnected, parents, (parents[parents.length - 1] as HTMLElement).outerHTML, loader.src === url);\n      //     }\n      //   }, 1);\n\n      //   setTimeout(() => clearInterval(interval), 1e3);\n      // }\n    };\n\n    const onError = (err: DOMException) => {\n      if(!err.message.includes('cannot be decoded')) {\n        console.error('Render image from url failed:', err, url, loader, err.message, loader.naturalWidth);\n      }\n\n      callback?.();\n    };\n\n    loader.decoding = 'async';\n    loader.src = url;\n    return loader.decode().then(onLoad, onError);\n    // const timeout = setTimeout(() => {\n    //   console.error('not yet decoded', loader, url);\n    //   debugger;\n    // }, 1e3);\n    // decodePromise.finally(() => {\n    //   clearTimeout(timeout);\n    // });\n  }\n}\n\nexport function renderImageFromUrlPromise(\n  elem: Parameters<typeof renderImageFromUrl>[0],\n  url: string,\n  useCache?: boolean,\n  processImageOnLoad?: (image: HTMLImageElement) => void\n) {\n  return new Promise<void>((resolve) => {\n    renderImageFromUrl(elem, url, resolve, useCache, processImageOnLoad);\n  });\n}\n","import {IS_APPLE_MOBILE} from './environment/userAgent';\n// import rootScope from '../lib/rootScope';\nimport callbackify from './callbackify';\nimport isCrbug1250841Error from './fixChromiumMp4.constants';\n\ntype MaybePromise<T> = Promise<T> | T;\n\nexport function shouldIgnoreVideoError(e: ErrorEvent) {\n  try {\n    const target = e.target as HTMLVideoElement;\n    const error = target.error;\n\n    if(!error || error.message.includes('URL safety check')) {\n      console.warn('will ignore video error', e);\n      return true;\n    }\n\n    const isChromeBug = isCrbug1250841Error(error);\n    if(isChromeBug && !(target as any).triedFixingChromeBug) {\n      let srcPromise: MaybePromise<string>;\n      const originalSrc = target.src;\n      if(originalSrc.includes('stream/')) {\n        srcPromise = originalSrc + '?_crbug1250841';\n      } else {\n        // srcPromise = rootScope.managers.appDocsManager.fixChromiumMp4(originalSrc);\n      }\n\n      // callbackify(srcPromise, (src) => {\n      //   (target as any).triedFixingChromeBug = true;\n      //   if(target.src === src) {\n      //     return;\n      //   }\n\n      //   target.src = src;\n      //   target.load();\n      // });\n      return true;\n    } else if(isChromeBug) {\n      console.error('chrome video error', e);\n    }\n  } catch(err) {}\n\n  return false;\n}\n\nexport default function onMediaLoad(media: HTMLMediaElement, readyState = media.HAVE_METADATA, useCanplayOnIos?: boolean) {\n  return new Promise<void>((resolve, reject) => {\n    if(media.readyState >= readyState) {\n      resolve();\n      return;\n    }\n\n    const loadEventName = IS_APPLE_MOBILE && !useCanplayOnIos ? 'loadeddata' : 'canplay';\n    const errorEventName = 'error';\n    const onLoad = () => {\n      media.removeEventListener(errorEventName, onError);\n      resolve();\n    };\n    const onError = (e: ErrorEvent) => {\n      if(shouldIgnoreVideoError(e)) {\n        return;\n      }\n\n      media.removeEventListener(loadEventName, onLoad);\n      media.removeEventListener(errorEventName, onError);\n      reject(media.error);\n    };\n    media.addEventListener(loadEventName, onLoad, {once: true});\n    media.addEventListener(errorEventName, onError);\n  });\n}\n","const IS_IMAGE_BITMAP_SUPPORTED = typeof(ImageBitmap) !== 'undefined';\n\nexport default IS_IMAGE_BITMAP_SUPPORTED;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport indexOfAndSplice from './helpers/array/indexOfAndSplice';\nimport deepEqual from './helpers/object/deepEqual';\nimport { renderImageFromUrlPromise } from './helpers/dom/renderImageFromUrl';\n// import mediaSizes, {ScreenSize} from './helpers/mediaSizes';\n// import windowSize from './helpers/windowSize';\nimport IS_IMAGE_BITMAP_SUPPORTED from './helpers/environment/imageBitmapSupport';\nimport { IS_FIREFOX } from './helpers/environment/userAgent';\n\nconst SCALE_PATTERN = true;\nconst USE_BITMAP = IS_IMAGE_BITMAP_SUPPORTED && IS_FIREFOX;\n\ntype ChatBackgroundPatternRendererInitOptions = {\n  url: string,\n  width: number,\n  height: number,\n  mask?: boolean\n};\n\ndeclare global {\n  interface HTMLCanvasElement {\n    dpr?: number;\n  }\n}\n\nexport default class ChatBackgroundPatternRenderer {\n  private static INSTANCES: ChatBackgroundPatternRenderer[] = [];\n\n  // private pattern: CanvasPattern;\n  // private objectUrl: string;\n  private options!: ChatBackgroundPatternRendererInitOptions;\n  private canvases: Set<HTMLCanvasElement>;\n  // private createCanvasPatternPromise: Promise<CanvasPattern>;\n  // private exportCanvasPatternToImagePromise: Promise<string>;\n  private renderImageFromUrlPromise!: Promise<HTMLImageElement>;\n  private image!: HTMLImageElement;\n  private imageBitmap!: ImageBitmap;\n\n  constructor() {\n    this.canvases = new Set();\n  }\n\n  public static getInstance(options: ChatBackgroundPatternRendererInitOptions) {\n    let instance = this.INSTANCES.find((instance) => {\n      return deepEqual(instance.options, options);\n    });\n\n    if (!instance) {\n      instance = new ChatBackgroundPatternRenderer();\n      instance.init(options);\n      this.INSTANCES.push(instance);\n    }\n\n    return instance;\n  }\n\n  public init(options: ChatBackgroundPatternRendererInitOptions) {\n    // if(this.options) {\n    //   if(this.options.width !== options.width || this.options.height !== options.height) {\n    //     this.createCanvasPatternPromise =\n    //       this.pattern =\n    //       this.exportCanvasPatternToImagePromise =\n    //       undefined;\n    //   }\n    // }\n\n    this.options = options;\n  }\n\n  public renderToCanvas(canvas: HTMLCanvasElement) {\n    // return this.createCanvasPattern(canvas).then(() => {\n    // return this.fillCanvas(canvas);\n    // });\n\n    return this.renderImageFromUrl(this.options.url).then(() => {\n      return this.fillCanvas(canvas);\n    });\n  }\n\n  private renderImageFromUrl(url: string) {\n    if (this.renderImageFromUrlPromise) return this.renderImageFromUrlPromise;\n    const img = this.image = document.createElement('img');\n    img.crossOrigin = 'anonymous';\n    return this.renderImageFromUrlPromise = renderImageFromUrlPromise(img, url, false).then(() => {\n      if (!IS_IMAGE_BITMAP_SUPPORTED || !USE_BITMAP) {\n        return img;\n      }\n\n      return createImageBitmap(img, {\n        resizeWidth: 1440,\n        resizeHeight: 2960\n      }).then((imageBitmap) => {\n        this.imageBitmap = imageBitmap;\n        return img;\n      });\n    });\n  }\n\n  /* private createCanvasPattern(canvas: HTMLCanvasElement) {\n    if(this.createCanvasPatternPromise) return this.createCanvasPatternPromise;\n    return this.createCanvasPatternPromise = this.renderImageFromUrl(this.options.url).then((img) => {\n      let createPatternFrom: HTMLImageElement | HTMLCanvasElement;\n      if(IS_SAFARI) {\n        const canvas = createPatternFrom = document.createElement('canvas');\n        canvas.width = img.naturalWidth;\n        canvas.height = img.naturalHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      } else {\n        createPatternFrom = img;\n      }\n\n      const perf = performance.now();\n      this.pattern = canvas.getContext('2d').createPattern(createPatternFrom, 'repeat-x');\n      console.warn('creating pattern time:', performance.now() - perf);\n\n      return this.pattern;\n    });\n  }\n\n  public exportCanvasPatternToImage(canvas: HTMLCanvasElement) {\n    if(this.exportCanvasPatternToImagePromise) return this.exportCanvasPatternToImagePromise;\n    return this.exportCanvasPatternToImagePromise = new Promise<string>((resolve) => {\n      canvas.toBlob((blob) => {\n        const newUrl = this.objectUrl = URL.createObjectURL(blob);\n        resolve(newUrl);\n      }, 'image/png');\n    });\n  } */\n\n  public cleanup(canvas: HTMLCanvasElement) {\n    this.canvases.delete(canvas);\n\n    if (!this.canvases.size) {\n      indexOfAndSplice(ChatBackgroundPatternRenderer.INSTANCES, this);\n\n      this.imageBitmap?.close();\n      // if(this.objectUrl) {\n      //   URL.revokeObjectURL(this.objectUrl);\n      // }\n    }\n  }\n\n  public fillCanvas(canvas: HTMLCanvasElement) {\n    const context = canvas.getContext('2d');\n    const { width, height } = canvas;\n    // const perf = performance.now();\n    // if(context.fillStyle instanceof CanvasPattern) {\n    //   context.clearRect(0, 0, width, height);\n    // }\n\n    const source = this.imageBitmap || this.image;\n\n    let imageWidth = source.width, imageHeight = source.height;\n    // let patternHeight = 1480 * canvas.dpr;\n    // if(+canvas.dataset.originalHeight !== height) patternHeight *= .6875;\n    const patternHeight = (500 + (this.options.height / 2.5)) * canvas.dpr!;\n    const ratio = patternHeight / imageHeight;\n    imageWidth *= ratio;\n    imageHeight = patternHeight;\n\n    if (this.options.mask) {\n      context!.fillStyle = '#000';\n      context!.fillRect(0, 0, width, height);\n      context!.globalCompositeOperation = 'destination-out';\n    } else {\n      context!.globalCompositeOperation = 'source-over';\n    }\n\n    const d = (y: number) => {\n      for (let x = 0; x < width; x += imageWidth) {\n        context!.drawImage(source, x, y, imageWidth, imageHeight);\n      }\n    };\n\n    const centerY = (height - imageHeight) / 2;\n    d(centerY);\n\n    if (centerY > 0) {\n      let topY = centerY;\n      do {\n        d(topY -= imageHeight);\n      } while (topY >= 0);\n    }\n\n    const endY = height - 1;\n    for (let bottomY = centerY + imageHeight; bottomY < endY; bottomY += imageHeight) {\n      d(bottomY);\n    }\n\n    // for(let x = 0; x < width; x += imageWidth) {\n    //   for(let y = 0; y < height; y += imageHeight) {\n    //     context.drawImage(img, x, y, imageWidth, imageHeight);\n    //   }\n    // }\n    // context.fillStyle = this.pattern;\n    // context.fillRect(0, 0, width, height);\n    // console.warn('fill canvas time', performance.now() - perf);\n  }\n\n  public setCanvasDimensions(canvas: HTMLCanvasElement) {\n    const devicePixelRatio = Math.min(2, window.devicePixelRatio);\n    const width = this.options.width * devicePixelRatio;\n    let height = this.options.height * devicePixelRatio;\n\n    canvas.dpr = devicePixelRatio;\n    canvas.dataset.originalHeight = '' + height;\n    const ScreenSize = {\n      mobile: 600,\n      medium: 1275,\n      large: 1680\n    };\n    const activeScreen = window.innerWidth >= ScreenSize.large ? 'large' :\n      window.innerWidth >= ScreenSize.medium ? 'medium' : 'mobile';\n    if (activeScreen === 'large' && SCALE_PATTERN) height *= 1.5;\n    // if(mediaSizes.activeScreen === ScreenSize.large && SCALE_PATTERN) height *= 1.5;\n    canvas.width = width;\n    canvas.height = height;\n  }\n\n  public createCanvas() {\n    const canvas = document.createElement('canvas');\n    this.canvases.add(canvas);\n    this.setCanvasDimensions(canvas);\n    return canvas;\n  }\n\n  public resize(width: number, height: number) {\n    this.init({\n      ...this.options,\n      width,\n      height\n    });\n\n    const promises: Promise<any>[] = [];\n    for (const canvas of this.canvases) {\n      this.setCanvasDimensions(canvas);\n      promises.push(this.renderToCanvas(canvas));\n    }\n\n    return Promise.all(promises);\n  }\n\n  public static resizeInstances(width: number, height: number) {\n    return Promise.all(this.INSTANCES.map((instance) => instance.resize(width, height)));\n  }\n\n  /* public setResizeMode(resizing: boolean) {\n    const canvases = Array.from(this.canvases);\n    const canvas = canvases[canvases.length - 1];\n    canvas.style.display = resizing ? 'none' : '';\n    const img = this.img;\n    img.style.display = resizing ? '' : 'none';\n\n    return {img, canvas};\n  } */\n}\n","export default function indexOfAndSplice<T>(array: Array<T>, item: T) {\n  const idx = array.indexOf(item);\n  const spliced = idx === -1 ? undefined : array.splice(idx, 1);\n  return spliced?.[0];\n}\n","import React, { FC, useEffect, useRef } from \"../../lib/teact/teact\";\nimport buildClassName from \"../../util/buildClassName\";\nimport ChatBackgroundGradientRenderer from \"./gradientRender\";\nimport ChatBackgroundPatternRenderer from \"./patternRender\";\nimport './AnimatedChatBackground.scss';\nimport { EventEmitter } from \"events\";\nimport { ThemeKey } from \"../../types\";\nimport DefaultPattern from './assets/patterns/pattern.svg';\nimport useLastCallback from \"../../hooks/useLastCallback\";\n\nclass BackgroundAnimator {\n  private _gradientRenderer?: ChatBackgroundGradientRenderer;\n  private _patternRenderer?: ChatBackgroundPatternRenderer;\n  private _gradientCanvas?: HTMLCanvasElement;\n  private _patternCanvas?: HTMLCanvasElement;\n  backgroundTempId: number = 0;\n\n  get gradientCanvas() {\n    return this._gradientCanvas;\n  }\n\n  get patternCanvas() {\n    return this._patternCanvas;\n  }\n\n  get patternRenderer() {\n    return this._patternRenderer;\n  }\n\n  start(options: {\n    url: string;\n    colors: string\n    isPattern: boolean;\n    mask: boolean;\n    rect: DOMRect;\n  }) {\n    if (this._gradientRenderer && this._gradientCanvas) {\n      this._gradientCanvas.dataset.colors = options.colors;\n      this._gradientRenderer.init(this.gradientCanvas!);\n    } else {\n      const { canvas, gradientRenderer } = ChatBackgroundGradientRenderer.create(options.colors);\n      this._gradientRenderer = gradientRenderer;\n      this._gradientCanvas = canvas;\n      this._gradientCanvas.classList.add(\n        'chat-background-item-canvas',\n        'chat-background-item-color-canvas',\n        'chat-background-item-scalable'\n      );\n    }\n\n    const opt = {\n      url: options.url,\n      width: options.rect.width,\n      height: options.rect.height,\n      mask: options.mask\n    }\n    if (this._patternRenderer && this._patternCanvas) {\n      this._patternRenderer.init(opt);\n      this._patternRenderer.fillCanvas(this._patternCanvas);\n      this._patternRenderer.resize(opt.width, opt.height);\n    }\n    else {\n      this._patternRenderer = ChatBackgroundPatternRenderer.getInstance(opt);\n      this._patternCanvas = this._patternRenderer.createCanvas();\n      this._patternCanvas.classList.add('chat-background-item-canvas', 'chat-background-item-pattern-canvas');\n    }\n  }\n\n  moveGradientSmoothly() {\n    this._gradientRenderer?.toNextPosition(this._fastSmoothScroll());\n  }\n\n  public destroy() {\n    this._cleanupBackground();\n  }\n\n  private _cleanupBackground() {\n    ++this.backgroundTempId;\n    // if (this._patternRenderer && this._patternCanvas) {\n    // this._patternRenderer.cleanup(this._patternCanvas);\n    // this._patternCanvas.remove();\n    // this._patternRenderer = this._patternCanvas = undefined;\n    // }\n    this._gradientRenderer?.cleanup();\n  }\n\n  private _fastSmoothScroll() {\n    const MIN_JS_DURATION = 250;\n    const MAX_JS_DURATION = 600;\n    const LONG_TRANSITION_MAX_DISTANCE = 1500;\n    const path = 500;\n    const forceDuration = undefined;\n    const absPath = Math.abs(path);\n    const duration = forceDuration ?? (\n      MIN_JS_DURATION + (absPath / LONG_TRANSITION_MAX_DISTANCE) * (MAX_JS_DURATION - MIN_JS_DURATION)\n    );\n    const startAt = Date.now();\n    const getProgress = () => duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\n    return getProgress;\n  }\n}\n\nconst backgroundEventEmitter = new EventEmitter();\n\nexport function moveChatBackgroundSmoothly() {\n  backgroundEventEmitter.emit(\"moveGradientSmoothly\");\n}\n\ninterface OwnProps {\n  theme: ThemeKey;\n  customBackground?: string;\n  backgroundColor?: string;\n  patternColor?: string;\n}\n\nexport const AnimatedChatBackground: FC<OwnProps> = ({ theme, customBackground, backgroundColor, patternColor }) => {\n  const animRef = useRef(new BackgroundAnimator());\n  const containerRef = useRef<HTMLDivElement>(null);\n  const isPattern = customBackground === undefined && backgroundColor === undefined;\n  const isDarkPattern = theme === \"dark\";\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const observer = new ResizeObserver(([{ contentRect }]) => {\n      animRef.current.patternRenderer?.resize(contentRect.width, contentRect.height);\n    });\n    observer.observe(containerRef.current);\n    return () => observer.disconnect();\n  }, [containerRef]);\n\n  useEffect(() => {\n    const anim = animRef.current;\n    backgroundEventEmitter.on(\"moveGradientSmoothly\", anim.moveGradientSmoothly.bind(anim));\n\n    return () => {\n      anim.destroy();\n      backgroundEventEmitter.off(\"moveGradientSmoothly\", anim.moveGradientSmoothly.bind(anim));\n    };\n  }, []);\n\n  const startAnimation = useLastCallback(() => {\n    if (!containerRef.current) return;\n    const anim = animRef.current;\n    const colors = isDarkPattern ? \"#fec496,#dd6cb9,#962fbf,#4f5bd5\" : \"#dbddbb,#6ba587,#d5d88d,#88b884\";\n    anim.destroy();\n    anim.start({\n      colors,\n      isPattern: true,\n      mask: isDarkPattern,\n      rect: containerRef.current.getBoundingClientRect(),\n      url: DefaultPattern,\n    });\n    if (isDarkPattern) {\n      anim.gradientCanvas!.style.setProperty(\"--opacity-max\", \"0.3\");\n      anim.patternCanvas!.style.removeProperty(\"--opacity-max\");\n    } else {\n      anim.gradientCanvas!.style.removeProperty(\"--opacity-max\");\n      anim.patternCanvas!.style.setProperty(\"--opacity-max\", \"0.5\");\n    }\n    containerRef.current.appendChild(anim.gradientCanvas!);\n    containerRef.current.appendChild(anim.patternCanvas!);\n  });\n\n  useEffect(() => {\n    const anim = animRef.current;\n    startAnimation();\n    return () => {\n      anim.destroy();\n    };\n  }, [isDarkPattern]);\n\n  return (\n    <div className={buildClassName(\"chat-background\", isPattern && 'is-visible', !isPattern && 'hide')}>\n      <div\n        ref={containerRef}\n        className={buildClassName(\n          \"chat-background-item\",\n          isPattern && \"is-pattern\",\n          isDarkPattern && \"is-dark\",\n          !isPattern && \"is-image chat-background-item-scalable\"\n        )}\n      />\n    </div>\n  );\n}\n","import { ApiChatFolder, ApiMessageEntityCustomEmoji, ApiMessageEntityTypes } from \"../../api/types\";\nimport { getGlobal } from \"../../global\";\nimport { FoldersState } from \"../../hooks/reducers/useFoldersReducer\";\nimport React, { FC } from \"../../lib/teact/teact\";\nimport CustomEmoji from \"../../components/common/CustomEmoji\";\n\nnamespace Icons {\n  export type OwnProps = {\n    fill?: string;\n  };\n\n  const defaultFill = 'var(--folder-icon-fill, black)';\n\n  export const Bot: FC<OwnProps> = ({ fill = defaultFill }) => {\n    return <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M21.116 16.8597C21.8886 16.8597 22.5149 16.0768 22.5149 15.1111C22.5149 14.1453 21.8886 13.3625 21.116 13.3625C20.3434 13.3625 19.7171 14.1453 19.7171 15.1111C19.7171 16.0768 20.3434 16.8597 21.116 16.8597Z\" fill={fill} />\n      <path d=\"M14.8791 16.8597C15.6517 16.8597 16.278 16.0768 16.278 15.1111C16.278 14.1454 15.6517 13.3625 14.8791 13.3625C14.1065 13.3625 13.4802 14.1454 13.4802 15.1111C13.4802 16.0768 14.1065 16.8597 14.8791 16.8597Z\" fill={fill} />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.0395 21.2574V15.3174C27.0395 10.3252 22.9925 6.27826 18.0004 6.27826C13.0082 6.27826 8.96124 10.3252 8.96124 15.3174V21.2574C8.96124 24.1502 8.96124 25.5966 9.52422 26.7015C10.0194 27.6734 10.8096 28.4636 11.7815 28.9588C12.8864 29.5217 14.3328 29.5217 17.2256 29.5217H18.7752C21.6679 29.5217 23.1143 29.5217 24.2192 28.9588C25.1911 28.4636 25.9813 27.6734 26.4765 26.7015C27.0395 25.5966 27.0395 24.1502 27.0395 21.2574ZM11.5434 15.3174C11.5434 11.7516 14.4341 8.86088 17.9999 8.86088C21.5658 8.86088 24.4565 11.7516 24.4565 15.3174V16.7772C24.4565 18.2549 23.608 19.6077 22.1748 19.9675C21.0836 20.2414 19.6533 20.4826 17.9999 20.4826C16.3466 20.4826 14.9163 20.2414 13.8251 19.9675C12.3919 19.6077 11.5434 18.2549 11.5434 16.7772V15.3174Z\" fill={fill} />\n      <path d=\"M30.2676 16.4C31.096 16.4 31.7676 17.0716 31.7676 17.9V24.3565C31.7676 25.1849 31.096 25.8565 30.2676 25.8565C29.4392 25.8565 28.7676 25.1849 28.7676 24.3565V17.9C28.7676 17.0716 29.4392 16.4 30.2676 16.4Z\" fill={fill} />\n      <path d=\"M7.23291 17.9C7.23291 17.0716 6.56134 16.4 5.73291 16.4C4.90448 16.4 4.23291 17.0716 4.23291 17.9V24.3565C4.23291 25.1849 4.90448 25.8565 5.73291 25.8565C6.56134 25.8565 7.23291 25.1849 7.23291 24.3565V17.9Z\" fill={fill} />\n    </svg>\n  }\n\n  export const Channel: FC<OwnProps> = ({ fill = defaultFill }) => {\n    return <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M12.1765 22.708H15.5855C16.0157 22.708 16.2308 22.708 16.4395 22.7306C17.0143 22.7929 17.568 22.9829 18.0601 23.2866C18.2387 23.3969 18.4085 23.5289 18.7481 23.7931L22.3164 26.5684C24.4611 28.2365 25.5335 29.0706 26.4338 29.0629C27.217 29.0562 27.9551 28.6953 28.4412 28.0811C29 27.3751 29 26.0166 29 23.2996V11.7634C29 9.04635 29 7.68782 28.4412 6.98185C27.9551 6.3677 27.217 6.00672 26.4338 6.00005C25.5335 5.99239 24.4611 6.82644 22.3164 8.49455L18.7481 11.2699C18.4085 11.534 18.2387 11.6661 18.0601 11.7763C17.568 12.0801 17.0143 12.27 16.4395 12.3324C16.2308 12.355 16.0157 12.355 15.5855 12.355H12.1765C9.31759 12.355 7 14.6726 7 17.5315C7 20.3904 9.31758 22.708 12.1765 22.708Z\" fill={fill} />\n      <path d=\"M12.2982 25.1742C12.1764 25.4348 12.1764 25.7709 12.1764 26.4431V27.8844C12.1764 29.3139 13.3352 30.4727 14.7646 30.4727C16.1941 30.4727 17.3529 29.3139 17.3529 27.8844V26.4431C17.3529 25.7709 17.3529 25.4348 17.231 25.1742C17.1026 24.8995 16.8817 24.6786 16.6069 24.5501C16.3464 24.4283 16.0103 24.4283 15.3381 24.4283H14.1912C13.519 24.4283 13.1829 24.4283 12.9224 24.5501C12.6476 24.6786 12.4267 24.8995 12.2982 25.1742Z\" fill={fill} />\n    </svg>\n  }\n\n  export const Chat: FC<OwnProps> = ({ fill = defaultFill }) => {\n    return <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M30 17.2847C30 11.2598 24.6274 6.37561 18 6.37561C11.3726 6.37561 6 11.2598 6 17.2847C6 20.7209 7.60509 23.5375 10.3363 25.5371C10.6856 25.7929 11.0073 27.2137 10.2288 28.4072C9.45024 29.6006 8.47959 30.146 8.96637 30.3502C9.26647 30.4761 11.0397 30.5384 12.3196 29.8206C14.1496 28.7943 14.6613 27.7725 15.0551 27.8629C15.9973 28.079 16.9839 28.1938 18 28.1938C24.6274 28.1938 30 23.3096 30 17.2847Z\" fill={fill} />\n    </svg>\n  }\n\n  export const Chats: FC<OwnProps> = ({ fill = defaultFill }) => {\n    return <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M22.3902 9.03227C20.3914 7.162 17.595 6 14.5 6C8.42487 6 3.5 10.4772 3.5 16C3.5 19.1499 4.97133 21.7318 7.47498 23.5647C7.79515 23.7991 8.09005 25.1016 7.37638 26.1956C7.08455 26.643 6.76327 26.991 6.51594 27.2589C6.15843 27.6462 5.95542 27.8661 6.21917 27.9767C6.49426 28.0921 8.11974 28.1492 9.29294 27.4912C10.2112 26.9763 10.7674 26.4625 11.1419 26.1166C11.4516 25.8305 11.6371 25.6592 11.8005 25.6967C12.3863 25.831 12.9908 25.9227 13.6098 25.9677C13.6182 25.9683 13.6267 25.9689 13.6351 25.9695C13.9205 25.9897 14.2089 26 14.5 26C20.5751 26 25.5 21.5228 25.5 16C25.5 13.2908 24.3149 10.8332 22.3902 9.03227Z\" fill={fill} />\n      <path d=\"M32.5 19C32.5 15.0932 30.0356 11.7097 26.4429 10.0641C26.0059 9.86387 25.6121 10.3758 25.8411 10.7985C26.6828 12.3527 27.16 14.1145 27.16 16C27.16 21.6043 22.944 26.1149 17.4721 27.3341C16.9915 27.4412 16.8851 28.0914 17.3467 28.2627C18.6282 28.738 20.0305 29 21.5 29C22.4314 29 23.3358 28.8948 24.1995 28.6967C24.3629 28.6592 24.5484 28.8305 24.8581 29.1166C25.2326 29.4625 25.7888 29.9763 26.7071 30.4912C27.8803 31.1492 29.5057 31.0921 29.7808 30.9767C30.0446 30.8661 29.8416 30.6462 29.4841 30.2589C29.2367 29.991 28.9155 29.643 28.6236 29.1956C27.91 28.1016 28.2048 26.7991 28.525 26.5647C31.0287 24.7318 32.5 22.1499 32.5 19Z\" fill={fill} />\n    </svg>\n  }\n\n  export const Folder: FC<OwnProps> = ({ fill = defaultFill }) => {\n    return <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M6.21265 9.53789C6 10.1456 6 10.9016 6 12.4135C6 12.6655 6 12.7915 6.03544 12.8928C6.09892 13.0742 6.24156 13.2169 6.42298 13.2803C6.52427 13.3158 6.65026 13.3158 6.90226 13.3158H29.2421C29.3595 13.3158 29.4181 13.3158 29.4672 13.308C29.7375 13.2652 29.9494 13.0533 29.9922 12.783C30 12.7339 30 12.6752 30 12.5579C30 12.0885 30 11.8538 29.9689 11.6574C29.7977 10.5764 28.9499 9.72863 27.8689 9.55742C27.6725 9.52632 27.4378 9.52632 26.9684 9.52632H19.1548C18.9418 9.52632 18.8353 9.52632 18.7327 9.52075C17.8706 9.47396 17.0503 9.13419 16.4077 8.55768C16.3312 8.48907 16.2559 8.41377 16.1053 8.26319C15.9547 8.1126 15.8794 8.03725 15.8029 7.96863C15.1602 7.39213 14.3399 7.05236 13.4778 7.00557C13.3752 7 13.2687 7 13.0557 7H11.4135C9.90159 7 9.14562 7 8.53789 7.21265C7.44937 7.59354 6.59354 8.44937 6.21265 9.53789Z\" fill={fill} />\n      <path d=\"M6.20651 16.8766C6 17.282 6 17.8125 6 18.8737V20.3895C6 23.2192 6 24.6341 6.5507 25.7149C7.03512 26.6656 7.80807 27.4386 8.75878 27.923C9.8396 28.4737 11.2545 28.4737 14.0842 28.4737H21.9158C24.7455 28.4737 26.1604 28.4737 27.2412 27.923C28.1919 27.4386 28.9649 26.6656 29.4493 25.7149C30 24.6341 30 23.2192 30 20.3895V18.8737C30 17.8125 30 17.282 29.7935 16.8766C29.6118 16.5201 29.322 16.2303 28.9655 16.0486C28.5602 15.8421 28.0296 15.8421 26.9684 15.8421H9.03158C7.97043 15.8421 7.43985 15.8421 7.03454 16.0486C6.67803 16.2303 6.38817 16.5201 6.20651 16.8766Z\" fill={fill} />\n    </svg>\n  }\n\n  export const Group: FC<OwnProps> = ({ fill = defaultFill }) => {\n    return <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M14.3333 17.3333C16.9107 17.3333 19 15.244 19 12.6667C19 10.0893 16.9107 8 14.3333 8C11.756 8 9.66667 10.0893 9.66667 12.6667C9.66667 15.244 11.756 17.3333 14.3333 17.3333Z\" fill={fill} />\n      <path d=\"M5 25.3654C5 26.8204 6.17955 28 7.63461 28H21.0376C22.4901 27.997 23.6667 26.8186 23.6667 25.3654C23.6667 24.5819 23.4961 23.799 23.0277 23.1928C22.9608 23.1062 22.8879 23.0232 22.8084 22.9443C22.4728 22.611 22.0286 22.2323 21.4585 21.8601C21.4277 21.8399 21.3965 21.8198 21.365 21.7998C19.9048 20.8708 17.6512 20 14.3333 20C9.6174 20 7.05162 21.7592 5.85822 22.9443C5.22282 23.5753 5 24.4699 5 25.3654Z\" fill={fill} />\n      <path d=\"M25.1023 28H30.823C32.0253 28 33 27.0253 33 25.823C33 25.0652 32.806 24.3089 32.2604 23.7831C31.2358 22.7956 29.037 21.3333 25 21.3333C24.7745 21.3333 24.5548 21.3379 24.3406 21.3467L24.368 21.3738C25.5844 22.5817 25.88 24.1575 25.88 25.3654C25.88 26.3368 25.5943 27.2415 25.1023 28Z\" fill={fill} />\n      <path d=\"M25 18.6667C27.2091 18.6667 29 16.8758 29 14.6667C29 12.4575 27.2091 10.6667 25 10.6667C22.7909 10.6667 21 12.4575 21 14.6667C21 16.8758 22.7909 18.6667 25 18.6667Z\" fill={fill} />\n    </svg>\n  }\n\n  export const Star: FC<OwnProps> = ({ fill = defaultFill }) => {\n    return <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.8151 27.4314C17.4066 27.0754 18.1464 27.0754 18.7379 27.4314L23.2643 30.1558C24.6767 31.0059 26.4164 29.739 26.0409 28.1338L24.8434 23.0146C24.6854 22.3394 24.9152 21.6324 25.4399 21.1792L29.4253 17.7361C30.6744 16.6571 30.0084 14.6069 28.3637 14.4678L23.1107 14.0233C22.4222 13.9651 21.8224 13.5308 21.5521 12.8949L19.4922 8.04816C18.849 6.53473 16.7039 6.53473 16.0607 8.04816L14.0008 12.8949C13.7306 13.5308 13.1307 13.9651 12.4422 14.0233L7.18921 14.4678C5.54451 14.6069 4.8786 16.6571 6.12762 17.7361L10.1131 21.1792C10.6377 21.6324 10.8675 22.3394 10.7096 23.0146L9.51201 28.1338C9.1365 29.739 10.8762 31.0059 12.2887 30.1558L16.8151 27.4314Z\" fill={fill} />\n    </svg>\n  }\n\n  export const User: FC<OwnProps> = ({ fill = defaultFill }) => {\n    return <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M19 16.8125C22.0376 16.8125 24.5 14.3501 24.5 11.3125C24.5 8.27493 22.0376 5.8125 19 5.8125C15.9624 5.8125 13.5 8.27493 13.5 11.3125C13.5 14.3501 15.9624 16.8125 19 16.8125Z\" fill={fill} />\n      <path d=\"M8 25.5942C8 27.5787 9.60875 29.1875 11.5933 29.1875H26.4067C28.3912 29.1875 30 27.5787 30 25.5942C30 24.7942 29.8042 23.999 29.2698 23.4036C28.008 21.9978 24.9618 19.5625 19 19.5625C13.0382 19.5625 9.992 21.9978 8.7302 23.4036C8.19579 23.999 8 24.7942 8 25.5942Z\" fill={fill} />\n    </svg>\n  }\n}\n\nexport namespace FolderIcons {\n  export const Groups = {\n    Chats: { Emoticon: '💬', Icon: Icons.Chats },\n    Chat: { Emoticon: '✅', Icon: Icons.Chat },\n    Bot: { Emoticon: '🤖', Icon: Icons.Bot },\n    User: { Emoticon: '👤', Icon: Icons.User },\n    Group: { Emoticon: '👥', Icon: Icons.Group },\n    Star: { Emoticon: '⭐', Icon: Icons.Star },\n    Channel: { Emoticon: '📢', Icon: Icons.Channel },\n    Folder: { Emoticon: '📁', Icon: Icons.Folder }\n  } as const;\n\n  export const AllEmoticons = Object.values(Groups).map(({ Emoticon }) => Emoticon);\n\n  export const getIconByEmoticon = (emoticon: string) =>\n    Object.values(Groups).find(item => item.Emoticon === emoticon)?.Icon ?? null;\n\n  export const isSupportedEmoticon = (emoji: string) => !!getIconByEmoticon(emoji);\n}\n\n/**\n * ! Removing CustomEmojis from entities ensures that the new emoticon appears,\n */\nexport function removeCustomIconsFromFolder(folder: FoldersState['folder']) {\n  const { title } = folder;\n\n  // Identify entities to remove (CustomEmoji at start or end)\n  const entitiesToRemove = title.entities?.filter(\n    (e) => e.type === ApiMessageEntityTypes.CustomEmoji && e.offset === 0) || [];\n\n  // Update entities list, keeping only those that shouldn't be removed\n  title.entities = title.entities?.filter((e) => !entitiesToRemove.includes(e));\n\n  // Remove characters from text based on the offsets of the removed entities\n  const offsetsToRemove = new Set(entitiesToRemove.map((e) => e.offset));\n\n  title.text = [...title.text].filter((_, i) => !offsetsToRemove.has(i)).join(\"\");\n\n  return folder;\n}\n\nexport function findCustomEmojiAsIcon(entity: ApiChatFolder | FoldersState) {\n  // ! Check if folder title contains a single custom emoji at the start.\n  // ! For now we use that as folder icon\n  if ('mode' in entity) {\n    return entity.folder.title.entities?.find((e): e is ApiMessageEntityCustomEmoji =>\n      e.type === ApiMessageEntityTypes.CustomEmoji && e.offset === 0);\n  }\n  else {\n    return entity.title.entities?.find((e): e is ApiMessageEntityCustomEmoji =>\n      e.type === ApiMessageEntityTypes.CustomEmoji && e.offset === 0);\n  }\n}\n\nexport function getFolderIcon(entity: ApiChatFolder | FoldersState, size: number = 35) {\n  const folderId = 'folderId' in entity ? entity.folderId : 'id' in entity ? entity.id : undefined;\n  if (folderId === 0) return <FolderIcons.Groups.Chats.Icon />;\n\n  const customEmojiEntity = findCustomEmojiAsIcon(entity);\n  const customEmoji = customEmojiEntity && customEmojiEntity.documentId ? getGlobal().customEmojis.byId[customEmojiEntity.documentId] : undefined;\n  if (customEmoji) {\n    return <CustomEmoji\n      documentId={customEmoji.id}\n      size={size} />\n  }\n  else {\n    const emoticon = 'emoticon' in entity ? entity.emoticon : 'folder' in entity ? entity.folder.emoticon : undefined;\n    if (emoticon) {\n      const Icon = FolderIcons.getIconByEmoticon(emoticon);\n      if (Icon) return <Icon />;\n    }\n  }\n\n  return <FolderIcons.Groups.Folder.Icon />;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import { ApiMessageEntityTypes } from '../../api/types';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport React, { FC, getIsHeavyAnimating, RefObject, useCallback, useEffect, useRef, useState, VirtualElement, VirtualType } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { ChangeNotifier, NodeHelper, useOperationQueue, Utils } from './utils';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\n\ninterface RichTextEditorProps\n  extends Omit<React.HTMLProps<HTMLDivElement>, 'ref' | 'contentEditable' | 'tabIndex' | 'onBeforeInput' | 'suppressContentEditableWarning'> {\n  onInstanceRef?: (instanceRef: RefObject<RichTextEditorInstance>) => void;\n  contentEditable?: boolean;\n  canFocus?: boolean;\n}\n\ntype VoidCallback = () => void;\nexport interface RichTextEditorInstance {\n  getRoot: () => HTMLDivElement | undefined;\n  getHtml: () => string;\n  onContentChange: (cb: VoidCallback) => (VoidCallback | undefined);\n  replaceContent: (element: VirtualElement) => void;\n  insertElement: (element: VirtualElement) => void;\n  clearContent: VoidCallback;\n  cleanup: VoidCallback;\n}\n\nconst nodeHelper = new NodeHelper();\n\nconst RichTextEditor: FC<RichTextEditorProps> = ({\n  onInstanceRef,\n  contentEditable,\n  canFocus,\n  ...props\n}) => {\n  const localInputRef = useRef<HTMLDivElement>(null);\n  const contentChangeNotifier = useRef(new ChangeNotifier<void>());\n  const mutationObserverRef = useRef<MutationObserver | null>(null);\n\n  const getRootElement = () => localInputRef.current || undefined;\n\n  const clearContent = useLastCallback(() => {\n    if (!localInputRef.current) return;\n    TeactDOM.render(undefined, localInputRef.current);\n    localInputRef.current.innerHTML = \"\";\n  });\n\n  const instanceRef = useRef<RichTextEditorInstance>(({\n    getRoot: getRootElement,\n    getHtml() {\n      return getRootElement()?.innerHTML || \"\";\n    },\n    replaceContent(element) {\n      if (!localInputRef.current) return;\n      const caretPosition = Utils.getCaretCharacterOffset(localInputRef.current);\n\n      // const hiddenDiv = document.createElement(\"div\");\n      // TeactDOM.render(<>{element}</>, hiddenDiv);\n      // nodeHelper.syncDOMNodes(localInputRef.current, hiddenDiv);\n\n      clearContent();\n      TeactDOM.render(<>{element}</>, localInputRef.current);\n      Utils.setCaretCharacterOffset(localInputRef.current, caretPosition);\n    },\n    onContentChange(cb) {\n      return contentChangeNotifier.current.listen(cb);\n    },\n    insertElement(element) {\n      if (!localInputRef.current) return;\n      let selection = document.getSelection();\n      if (!selection || selection.rangeCount === 0) {\n        localInputRef.current.focus();\n        // Ensure the selection is updated after focusing\n        selection = document.getSelection();\n        if (!selection) return;\n      }\n\n      const range = selection.getRangeAt(0);\n      range.deleteContents();\n\n      const elementNode = document.createElement('span');\n      TeactDOM.render(element, elementNode);\n      range.insertNode(elementNode);\n\n      const newRange = document.createRange();\n      newRange.setStartAfter(elementNode);\n      newRange.collapse(true);\n      selection.removeAllRanges();\n      selection.addRange(newRange);\n    },\n    clearContent() {\n      clearContent();\n    },\n    cleanup() { },\n  }));\n\n  useEffect(() => {\n    if (!localInputRef.current) return;\n\n    mutationObserverRef.current = new MutationObserver(() => {\n      contentChangeNotifier.current.notify();\n    });\n\n    mutationObserverRef.current.observe(localInputRef.current, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      characterData: true,\n    });\n\n    return () => {\n      mutationObserverRef.current?.disconnect();\n      contentChangeNotifier.current.clear();\n    }\n  }, [localInputRef]);\n\n  useEffect(() => {\n    onInstanceRef?.(instanceRef);\n  }, [instanceRef]);\n\n  const focusInput = useLastCallback(() => {\n    if (!localInputRef.current || !canFocus) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(localInputRef.current);\n  });\n\n  return (\n    <div\n      {...props}\n      ref={localInputRef}\n      contentEditable={contentEditable}\n      tabIndex={0}\n      suppressContentEditableWarning\n    />\n  );\n};\n\nexport default RichTextEditor;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useCallback, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiFormattedText, ApiInputMessageReplyInfo, ApiSticker } from '../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../config';\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../util/directInputManager';\nimport parseEmojiOnlyString from '../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { debounce } from '../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../util/windowEnvironment';\nimport renderText from '../../components/common/helpers/renderText';\nimport { isSelectionInsideInput } from '../../components/middle/composer/helpers/selection';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../../components/common/icons/Icon';\nimport Button from '../../components/ui/Button';\nimport TextTimer from '../../components/ui/TextTimer';\nimport TextFormatter from '../../components/middle/composer/TextFormatter.async';\nimport { Contest } from '../../contest/contest';\nimport { MessageInputRefType, useMessageInputEvent } from '../../contest/text-editor';\nimport RichTextEditor, { RichTextEditorInstance } from './RichTextEditor';\nimport { MessageInputController } from './MessageInputController';\nimport './NewMessageInput.scss'\nimport useInputCustomEmojis from '../../components/middle/composer/hooks/useInputCustomEmojis';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  messageInputRef: MessageInputRefType,\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onUpdate?: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  initialText?: ApiFormattedText;\n  isChatWithSelf?: boolean;\n  canSendCustomEmoji?: (emoji: ApiSticker, emojiSetId?: string) => boolean;\n  disableMarkdown?: boolean;\n  disableTextFormatter?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nconst inputEvents = {} as any;\ninputEvents.all;\ninputEvents.selectionChanged;\ninputEvents.contentChanged;\n\nconst NewMessageInput: FC<OwnProps & StateProps> = ({\n  // ref,\n  messageInputRef,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  // getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  initialText,\n  canSendCustomEmoji,\n  disableMarkdown,\n  disableTextFormatter\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  const richTextEditorRef = useRef<RichTextEditorInstance | null>(null);\n  // ! Bug: useEffect does not trigger when `richTextEditorRef` or `messageInputRef` changes\n  const [richTextEditorRefUpdated, setRichTextEditorRefUpdated] = useState(false);\n  const [messageInputRefUpdated, setMessageInputRefUpdated] = useState(false);\n  // const messageInputRef = useRef<MessageInputInstance>(null); // , richTextEditorRef));\n  const { isMessageInputChanged } = useMessageInputEvent(messageInputRef);\n\n  useEffect(() => {\n    // ? Currently there is a bug that sometimes Teact calls class constructor() twice with useRef()\n    // ? So we call it here to make sure only one instance of class get created\n    if (richTextEditorRef.current && !messageInputRef.current) {\n      messageInputRef.current = new MessageInputController(\n        {\n          messageSendKeyCombo,\n          initialText,\n          canSendCustomEmoji\n        },\n        richTextEditorRef,\n        // sharedCanvasRef,\n        // sharedCanvasHqRef\n      );\n      inputRef.current = messageInputRef.current.getRoot()!;\n      setMessageInputRefUpdated((prev) => !prev);\n    }\n  }, [richTextEditorRefUpdated, richTextEditorRef.current]);\n\n  //  useInputCustomEmojis(\n  //   // getHtml,\n  //   messageInputRef,\n  //   inputRef,\n  //   sharedCanvasRef,\n  //   sharedCanvasHqRef,\n  //   absoluteContainerRef,\n  //   customEmojiPrefix,\n  //   canPlayAnimatedEmojis,\n  //   isReady,\n  //   isActive,\n  // );\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  const getInputElement = () => richTextEditorRef.current?.getRoot();\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const inputEl = getInputElement();\n      if (!inputEl || !scrollerCloneRef.current) return;\n      const scroller = inputEl.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const [lastFocusedElement, setLastFocusedElement] = useState<HTMLElement | null>(null);\n  const focusInput = useLastCallback(() => {\n    const inputEl = getInputElement();\n    if (!inputEl || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    const elementToFocus = lastFocusedElement && inputEl.contains(lastFocusedElement) ? lastFocusedElement : inputEl;\n    focusEditableElement(elementToFocus);\n  });\n\n  const handleFocusCapture = (event: React.FocusEvent) => {\n    const activeElement = document.activeElement;\n    if (activeElement instanceof HTMLElement) {\n      setLastFocusedElement(activeElement);\n    }\n  };\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    // clearSelection();\n    messageInputRef.current?.handleCloseTextFormatter();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    const inputEl = getInputElement();\n    if (!inputEl || !messageInputRef.current) return;\n    if (!checkSelection()) {\n      return;\n    }\n    if (disableTextFormatter) return;\n    if (isTextFormatterDisabled) {\n      return;\n    }\n    if (!messageInputRef.current.canOpenTextFormatter()) return;\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputEl.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    if (!messageInputRef.current) return;\n    // const html = getHtml();\n    const isTouched = messageInputRef.current.isTouched();\n    if (!isComposing && !isTouched && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !isTouched && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const inputEl = getInputElement();\n    if (!inputEl) return;\n    // logger.log(\"handleChange\");\n    const { innerHTML, textContent } = e.currentTarget;\n\n    // onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputEl.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputEl, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      const inputEl = getInputElement();\n      if (!inputEl) return;\n\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      // const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (!key) {\n        // TypeError: Cannot read properties of undefined (reading 'startsWith'), when setting autocomplete-options\n        return;\n      }\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        inputEl\n        && target !== inputEl\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(inputEl, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        inputEl.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const inputEl = getInputElement();\n    if (!inputEl) return;\n    // const input = inputRef.current!;\n\n    function suppressFocus() {\n      inputEl?.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      inputEl.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      inputEl.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && messageInputRef.current?.isTouched()), [isActive, isMessageInputChanged]);\n\n  useLayoutEffect(() => {\n    if (!messageInputRef.current) return;\n    const html = messageInputRef.current.getHtml();\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n      updateInputHeight(!html);\n    }\n  }, [messageInputRef.current, isMessageInputChanged, isActive, updateInputHeight]);\n\n  useEffect(() => {\n    onUpdate?.();\n  }, [isMessageInputChanged]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n    'new-message-input'\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  const onInstanceRef = useCallback((instance: RefObject<RichTextEditorInstance>) => {\n    richTextEditorRef.current = instance.current;\n    setRichTextEditorRefUpdated((prev) => !prev);\n  }, []);\n\n  return (\n    <div\n      id={id}\n      className='message-input'\n      onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <RichTextEditor\n            onInstanceRef={onInstanceRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            canFocus={!isNeedPremium}\n            role=\"textbox\"\n            dir=\"auto\"\n            // tabIndex={0}\n            onClick={focusInput}\n            // onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n            onFocusCapture={handleFocusCapture}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          {/* <canvas ref={sharedCanvasRef} className=\"shared-canvas\" /> */}\n          {/* <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" /> */}\n          {/* <div ref={absoluteContainerRef} className=\"absolute-video-container\" /> */}\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        messageInputRef={messageInputRef}\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        // setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(NewMessageInput));\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport { ApiMessageEntityTypes, type ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\nimport { removeCustomIconsFromFolder } from '../../contest/chat-folders/FolderIcons';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setEmoticon'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    emoticon: undefined,\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setEmoticon':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          emoticon: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n\n      if (!element) return;\n\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","logger","Contest","createLogger","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","target","closest","has","preventDefault","activeElement","pastedText","getData","log","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","textEditorRef","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isMessageInputChanged","useMessageInputEvent","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","getFormattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","isHtmlEmpty","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","messageInputRef","storyReactionRef","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","handleMessageSent","moveChatBackgroundSmoothly","handleEmojiSelect","emoji","insertEmoji","insertFormattedTextAndUpdateCursor","inInputId","setup","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isTouched","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","getHtml","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","areFormattedTextsEqual","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","resetEditor","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","requestNextMutation","messageInput","EDITABLE_INPUT_CSS_SELECTOR","focusEditableElement","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","getElementById","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","removeSymbol","selection","getSelection","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","execCommand","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","isEditorEmpty","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","isFree","customEmojiMessage","buildCustomEmojiHtml","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","NewMessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","canSendCustomEmoji","emojiSetId","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","peerColor","noUserColors","shoudReset","emojiIconClassName","children","otherProps","_extends","getApiPeerColorClass","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","stickerSetInfo","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","element","styles","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","range","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","top","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","replyToMessageId","getMessageReplyInfo","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","isApiPeerChat","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","removeChild","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","SymbolMenu","isFolderIconPicker","buttonIcon","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","options","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","uniqueId","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","lastIndexOf","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","requestForcedReflow","currentHeight","useThrottledCallback","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","mediaUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","updatePosition","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","AnimatedSticker","play","isLowPriority","onEnded","Photo","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","useSignal","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","safePlay","capturePlaying","togglePlaying","paused","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","r","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","stickersRef","giftStickersRef","handleMediaClick","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","shouldUseTextColor","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","PeerColorWrapper","BaseStory","gift","getStickerFromGift","attributes","getGiftAttributes","backdrop","pattern","model","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","renderStarGiftUnique","shouldSkipModal","isEmoji","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","Map","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","set","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","delete","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","staticIcon","isAnimationLoaded","markAnimationLoaded","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","availableReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","isPrimary","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","active","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","load","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","fastRafCallbacks","noop","deferredHelper","isFulfilled","isRejected","notify","notifyAll","this","lastNotify","listeners","addNotifyListener","_resolve","onFinish","_reject","cancel","deferredPromise","deferred","assign","instances","getAnimationInstance","animateSingle","instance","isCancelled","cancelAnimationByKey","createAnimationInstance","requestAnimationFrame","currentCallbacks","hexToRgb","hex","hexa","parseInt","hexaToRgba","ChatBackgroundGradientRenderer","constructor","_defineProperty","_positions","done","transitionValue","v","nextPositionTail","_nextPositionTail","_nextPositionTails","_nextPositionLeft","changeTailAndDraw","frames","_frames","drawImageData","_animatingToNextPosition","_tails","_curve","_incrementalCurve","g","getPositions","positions","splice","getNextPositions","phase","curveMax","curve","pos","distances","_phases","nextPos","distance","curPosition","tail","changeTail","_tail","_phase","curPos","drawGradient","getGradientImageData","_hctx","createImageData","_width","_height","pixels","colorsLength","_colors","positionsForPhase","previous","centerDistanceY","centerDistanceY2","centerDistanceX","swirlFactor","sqrt","theta","sinTheta","sin","cosTheta","cos","pixelX","pixelY","distanceSum","distanceX","distanceY","putImageData","_ctx","_hc","colors","alpha","_canvas","toNextPosition","drawNextPositionAnimated","bind","tails","nextPhaseOnIdx","inc","curves","cleanup","createCanvas","create","gradientRenderer","deepEqual","ignoreKeys","ignoreSet","okok","obj","ok","tx","every","USER_AGENT","userAgent","IS_APPLE_MOBILE","search","vendor","platform","maxTouchPoints","MSStream","IS_FIREFOX","CRBUG_1250841_ERROR","loadedURLs","elem","HTMLImageElement","HTMLVideoElement","SVGImageElement","setAttributeNS","renderImageFromUrl","useCache","processImageOnLoad","isImage","Image","onError","naturalWidth","decode","readyState","HAVE_METADATA","useCanplayOnIos","loadEventName","errorEventName","warn","isChromeBug","triedFixingChromeBug","srcPromise","originalSrc","shouldIgnoreVideoError","onMediaLoad","ImageBitmap","USE_BITMAP","IS_IMAGE_BITMAP_SUPPORTED","ChatBackgroundPatternRenderer","canvases","getInstance","INSTANCES","renderToCanvas","fillCanvas","renderImageFromUrlPromise","crossOrigin","createImageBitmap","resizeWidth","resizeHeight","imageBitmap","array","indexOfAndSplice","imageWidth","imageHeight","patternHeight","mask","centerY","topY","endY","bottomY","setCanvasDimensions","devicePixelRatio","originalHeight","resize","promises","resizeInstances","BackgroundAnimator","gradientCanvas","_gradientCanvas","patternCanvas","_patternCanvas","patternRenderer","_patternRenderer","_gradientRenderer","opt","moveGradientSmoothly","_fastSmoothScroll","destroy","_cleanupBackground","backgroundTempId","startAt","backgroundEventEmitter","EventEmitter","emit","AnimatedChatBackground","customBackground","animRef","isPattern","isDarkPattern","observer","ResizeObserver","disconnect","anim","on","off","startAnimation","DefaultPattern","Icons","FolderIcons","removeCustomIconsFromFolder","folder","entitiesToRemove","offsetsToRemove","findCustomEmojiAsIcon","getFolderIcon","Groups","Chats","customEmojiEntity","getIconByEmoticon","Folder","_Icons","defaultFill","Bot","Channel","Group","Star","User","_FolderIcons","Emoticon","AllEmoticons","isSupportedEmoticon","TextFormatter","NodeHelper","RichTextEditor","onInstanceRef","contentEditable","canFocus","localInputRef","contentChangeNotifier","ChangeNotifier","mutationObserverRef","clearContent","TeactDOM","render","instanceRef","getRoot","replaceContent","caretPosition","Utils","getCaretCharacterOffset","setCaretCharacterOffset","onContentChange","listen","insertElement","deleteContents","elementNode","insertNode","newRange","createRange","setStartAfter","removeAllRanges","addRange","MutationObserver","childList","subtree","characterData","focusInput","getIsHeavyAnimating","suppressContentEditableWarning","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onUpdate","onScroll","initialText","disableMarkdown","disableTextFormatter","editLastMessage","replyToNextMessage","inputRef","selectionTimeoutRef","cloneRef","scrollerCloneRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","richTextEditorRef","richTextEditorRefUpdated","setRichTextEditorRefUpdated","messageInputRefUpdated","setMessageInputRefUpdated","MessageInputController","prev","handleTimerEnd","getInputElement","maxInputHeight","updateInputHeight","willSend","scroller","newHeight","isOverflown","transitionDuration","toggle","lastFocusedElement","setLastFocusedElement","elementToFocus","handleCloseTextFormatter","checkSelection","selectedText","START_TO_END","processSelection","canOpenTextFormatter","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","onFocusCapture","TextTimer","endsAt","onEnd","anchorPosition","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSubmit","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","endOfStream","appendBuffer","buffer","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","Error","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","lastChild","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","onload","resizeImage","steppedScale","bitmap","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","hardwareConcurrency","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","fileSelector","accept","noMultiple","onchange","isElementInViewport","windowHeight","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","prototype","call","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","isNaN","module","exports","emitter","errorListener","removeListener","arguments","eventTargetAgnosticAddListener","flags","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","TypeError","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","warned","w","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","ret","unwrapListeners","arrayClone","listenerCount","n","wrapListener","arg","defineProperty","enumerable","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","len","addListener","prependListener","prependOnceListener","originalListener","spliceOne","removeAllListeners","rawListeners","eventNames"],"sourceRoot":""}